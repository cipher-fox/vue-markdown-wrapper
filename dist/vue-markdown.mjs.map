{"version":3,"file":"vue-markdown.mjs","sources":["../node_modules/marked/lib/marked.esm.js","../node_modules/dompurify/dist/purify.es.mjs","../src/components/VueMarkdown.vue"],"sourcesContent":["/**\n * marked v15.0.12 - a markdown parser\n * Copyright (c) 2011-2025, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\n\n// src/defaults.ts\nfunction _getDefaults() {\n  return {\n    async: false,\n    breaks: false,\n    extensions: null,\n    gfm: true,\n    hooks: null,\n    pedantic: false,\n    renderer: null,\n    silent: false,\n    tokenizer: null,\n    walkTokens: null\n  };\n}\nvar _defaults = _getDefaults();\nfunction changeDefaults(newDefaults) {\n  _defaults = newDefaults;\n}\n\n// src/rules.ts\nvar noopTest = { exec: () => null };\nfunction edit(regex, opt = \"\") {\n  let source = typeof regex === \"string\" ? regex : regex.source;\n  const obj = {\n    replace: (name, val) => {\n      let valSource = typeof val === \"string\" ? val : val.source;\n      valSource = valSource.replace(other.caret, \"$1\");\n      source = source.replace(name, valSource);\n      return obj;\n    },\n    getRegex: () => {\n      return new RegExp(source, opt);\n    }\n  };\n  return obj;\n}\nvar other = {\n  codeRemoveIndent: /^(?: {1,4}| {0,3}\\t)/gm,\n  outputLinkReplace: /\\\\([\\[\\]])/g,\n  indentCodeCompensation: /^(\\s+)(?:```)/,\n  beginningSpace: /^\\s+/,\n  endingHash: /#$/,\n  startingSpaceChar: /^ /,\n  endingSpaceChar: / $/,\n  nonSpaceChar: /[^ ]/,\n  newLineCharGlobal: /\\n/g,\n  tabCharGlobal: /\\t/g,\n  multipleSpaceGlobal: /\\s+/g,\n  blankLine: /^[ \\t]*$/,\n  doubleBlankLine: /\\n[ \\t]*\\n[ \\t]*$/,\n  blockquoteStart: /^ {0,3}>/,\n  blockquoteSetextReplace: /\\n {0,3}((?:=+|-+) *)(?=\\n|$)/g,\n  blockquoteSetextReplace2: /^ {0,3}>[ \\t]?/gm,\n  listReplaceTabs: /^\\t+/,\n  listReplaceNesting: /^ {1,4}(?=( {4})*[^ ])/g,\n  listIsTask: /^\\[[ xX]\\] /,\n  listReplaceTask: /^\\[[ xX]\\] +/,\n  anyLine: /\\n.*\\n/,\n  hrefBrackets: /^<(.*)>$/,\n  tableDelimiter: /[:|]/,\n  tableAlignChars: /^\\||\\| *$/g,\n  tableRowBlankLine: /\\n[ \\t]*$/,\n  tableAlignRight: /^ *-+: *$/,\n  tableAlignCenter: /^ *:-+: *$/,\n  tableAlignLeft: /^ *:-+ *$/,\n  startATag: /^<a /i,\n  endATag: /^<\\/a>/i,\n  startPreScriptTag: /^<(pre|code|kbd|script)(\\s|>)/i,\n  endPreScriptTag: /^<\\/(pre|code|kbd|script)(\\s|>)/i,\n  startAngleBracket: /^</,\n  endAngleBracket: />$/,\n  pedanticHrefTitle: /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/,\n  unicodeAlphaNumeric: /[\\p{L}\\p{N}]/u,\n  escapeTest: /[&<>\"']/,\n  escapeReplace: /[&<>\"']/g,\n  escapeTestNoEncode: /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/,\n  escapeReplaceNoEncode: /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/g,\n  unescapeTest: /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig,\n  caret: /(^|[^\\[])\\^/g,\n  percentDecode: /%25/g,\n  findPipe: /\\|/g,\n  splitPipe: / \\|/,\n  slashPipe: /\\\\\\|/g,\n  carriageReturn: /\\r\\n|\\r/g,\n  spaceLine: /^ +$/gm,\n  notSpaceStart: /^\\S*/,\n  endingNewline: /\\n$/,\n  listItemRegex: (bull) => new RegExp(`^( {0,3}${bull})((?:[\t ][^\\\\n]*)?(?:\\\\n|$))`),\n  nextBulletRegex: (indent) => new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\\\d{1,9}[.)])((?:[ \t][^\\\\n]*)?(?:\\\\n|$))`),\n  hrRegex: (indent) => new RegExp(`^ {0,${Math.min(3, indent - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)`),\n  fencesBeginRegex: (indent) => new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:\\`\\`\\`|~~~)`),\n  headingBeginRegex: (indent) => new RegExp(`^ {0,${Math.min(3, indent - 1)}}#`),\n  htmlBeginRegex: (indent) => new RegExp(`^ {0,${Math.min(3, indent - 1)}}<(?:[a-z].*>|!--)`, \"i\")\n};\nvar newline = /^(?:[ \\t]*(?:\\n|$))+/;\nvar blockCode = /^((?: {4}| {0,3}\\t)[^\\n]+(?:\\n(?:[ \\t]*(?:\\n|$))*)?)+/;\nvar fences = /^ {0,3}(`{3,}(?=[^`\\n]*(?:\\n|$))|~{3,})([^\\n]*)(?:\\n|$)(?:|([\\s\\S]*?)(?:\\n|$))(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/;\nvar hr = /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/;\nvar heading = /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/;\nvar bullet = /(?:[*+-]|\\d{1,9}[.)])/;\nvar lheadingCore = /^(?!bull |blockCode|fences|blockquote|heading|html|table)((?:.|\\n(?!\\s*?\\n|bull |blockCode|fences|blockquote|heading|html|table))+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/;\nvar lheading = edit(lheadingCore).replace(/bull/g, bullet).replace(/blockCode/g, /(?: {4}| {0,3}\\t)/).replace(/fences/g, / {0,3}(?:`{3,}|~{3,})/).replace(/blockquote/g, / {0,3}>/).replace(/heading/g, / {0,3}#{1,6}/).replace(/html/g, / {0,3}<[^\\n>]+>\\n/).replace(/\\|table/g, \"\").getRegex();\nvar lheadingGfm = edit(lheadingCore).replace(/bull/g, bullet).replace(/blockCode/g, /(?: {4}| {0,3}\\t)/).replace(/fences/g, / {0,3}(?:`{3,}|~{3,})/).replace(/blockquote/g, / {0,3}>/).replace(/heading/g, / {0,3}#{1,6}/).replace(/html/g, / {0,3}<[^\\n>]+>\\n/).replace(/table/g, / {0,3}\\|?(?:[:\\- ]*\\|)+[\\:\\- ]*\\n/).getRegex();\nvar _paragraph = /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/;\nvar blockText = /^[^\\n]+/;\nvar _blockLabel = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\nvar def = edit(/^ {0,3}\\[(label)\\]: *(?:\\n[ \\t]*)?([^<\\s][^\\s]*|<.*?>)(?:(?: +(?:\\n[ \\t]*)?| *\\n[ \\t]*)(title))? *(?:\\n+|$)/).replace(\"label\", _blockLabel).replace(\"title\", /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/).getRegex();\nvar list = edit(/^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/).replace(/bull/g, bullet).getRegex();\nvar _tag = \"address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option|p|param|search|section|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul\";\nvar _comment = /<!--(?:-?>|[\\s\\S]*?(?:-->|$))/;\nvar html = edit(\n  \"^ {0,3}(?:<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)|comment[^\\\\n]*(\\\\n+|$)|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n[ \t]*)+\\\\n|$)|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n[ \t]*)+\\\\n|$)|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n[ \t]*)+\\\\n|$))\",\n  \"i\"\n).replace(\"comment\", _comment).replace(\"tag\", _tag).replace(\"attribute\", / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/).getRegex();\nvar paragraph = edit(_paragraph).replace(\"hr\", hr).replace(\"heading\", \" {0,3}#{1,6}(?:\\\\s|$)\").replace(\"|lheading\", \"\").replace(\"|table\", \"\").replace(\"blockquote\", \" {0,3}>\").replace(\"fences\", \" {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n\").replace(\"list\", \" {0,3}(?:[*+-]|1[.)]) \").replace(\"html\", \"</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)\").replace(\"tag\", _tag).getRegex();\nvar blockquote = edit(/^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/).replace(\"paragraph\", paragraph).getRegex();\nvar blockNormal = {\n  blockquote,\n  code: blockCode,\n  def,\n  fences,\n  heading,\n  hr,\n  html,\n  lheading,\n  list,\n  newline,\n  paragraph,\n  table: noopTest,\n  text: blockText\n};\nvar gfmTable = edit(\n  \"^ *([^\\\\n ].*)\\\\n {0,3}((?:\\\\| *)?:?-+:? *(?:\\\\| *:?-+:? *)*(?:\\\\| *)?)(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)\"\n).replace(\"hr\", hr).replace(\"heading\", \" {0,3}#{1,6}(?:\\\\s|$)\").replace(\"blockquote\", \" {0,3}>\").replace(\"code\", \"(?: {4}| {0,3}\t)[^\\\\n]\").replace(\"fences\", \" {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n\").replace(\"list\", \" {0,3}(?:[*+-]|1[.)]) \").replace(\"html\", \"</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)\").replace(\"tag\", _tag).getRegex();\nvar blockGfm = {\n  ...blockNormal,\n  lheading: lheadingGfm,\n  table: gfmTable,\n  paragraph: edit(_paragraph).replace(\"hr\", hr).replace(\"heading\", \" {0,3}#{1,6}(?:\\\\s|$)\").replace(\"|lheading\", \"\").replace(\"table\", gfmTable).replace(\"blockquote\", \" {0,3}>\").replace(\"fences\", \" {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n\").replace(\"list\", \" {0,3}(?:[*+-]|1[.)]) \").replace(\"html\", \"</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)\").replace(\"tag\", _tag).getRegex()\n};\nvar blockPedantic = {\n  ...blockNormal,\n  html: edit(\n    `^ *(?:comment *(?:\\\\n|\\\\s*$)|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)|<tag(?:\"[^\"]*\"|'[^']*'|\\\\s[^'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))`\n  ).replace(\"comment\", _comment).replace(/tag/g, \"(?!(?:a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b\").getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n  heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n  fences: noopTest,\n  // fences not supported\n  lheading: /^(.+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  paragraph: edit(_paragraph).replace(\"hr\", hr).replace(\"heading\", \" *#{1,6} *[^\\n]\").replace(\"lheading\", lheading).replace(\"|table\", \"\").replace(\"blockquote\", \" {0,3}>\").replace(\"|fences\", \"\").replace(\"|list\", \"\").replace(\"|html\", \"\").replace(\"|tag\", \"\").getRegex()\n};\nvar escape = /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/;\nvar inlineCode = /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/;\nvar br = /^( {2,}|\\\\)\\n(?!\\s*$)/;\nvar inlineText = /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/;\nvar _punctuation = /[\\p{P}\\p{S}]/u;\nvar _punctuationOrSpace = /[\\s\\p{P}\\p{S}]/u;\nvar _notPunctuationOrSpace = /[^\\s\\p{P}\\p{S}]/u;\nvar punctuation = edit(/^((?![*_])punctSpace)/, \"u\").replace(/punctSpace/g, _punctuationOrSpace).getRegex();\nvar _punctuationGfmStrongEm = /(?!~)[\\p{P}\\p{S}]/u;\nvar _punctuationOrSpaceGfmStrongEm = /(?!~)[\\s\\p{P}\\p{S}]/u;\nvar _notPunctuationOrSpaceGfmStrongEm = /(?:[^\\s\\p{P}\\p{S}]|~)/u;\nvar blockSkip = /\\[[^[\\]]*?\\]\\((?:\\\\.|[^\\\\\\(\\)]|\\((?:\\\\.|[^\\\\\\(\\)])*\\))*\\)|`[^`]*?`|<[^<>]*?>/g;\nvar emStrongLDelimCore = /^(?:\\*+(?:((?!\\*)punct)|[^\\s*]))|^_+(?:((?!_)punct)|([^\\s_]))/;\nvar emStrongLDelim = edit(emStrongLDelimCore, \"u\").replace(/punct/g, _punctuation).getRegex();\nvar emStrongLDelimGfm = edit(emStrongLDelimCore, \"u\").replace(/punct/g, _punctuationGfmStrongEm).getRegex();\nvar emStrongRDelimAstCore = \"^[^_*]*?__[^_*]*?\\\\*[^_*]*?(?=__)|[^*]+(?=[^*])|(?!\\\\*)punct(\\\\*+)(?=[\\\\s]|$)|notPunctSpace(\\\\*+)(?!\\\\*)(?=punctSpace|$)|(?!\\\\*)punctSpace(\\\\*+)(?=notPunctSpace)|[\\\\s](\\\\*+)(?!\\\\*)(?=punct)|(?!\\\\*)punct(\\\\*+)(?!\\\\*)(?=punct)|notPunctSpace(\\\\*+)(?=notPunctSpace)\";\nvar emStrongRDelimAst = edit(emStrongRDelimAstCore, \"gu\").replace(/notPunctSpace/g, _notPunctuationOrSpace).replace(/punctSpace/g, _punctuationOrSpace).replace(/punct/g, _punctuation).getRegex();\nvar emStrongRDelimAstGfm = edit(emStrongRDelimAstCore, \"gu\").replace(/notPunctSpace/g, _notPunctuationOrSpaceGfmStrongEm).replace(/punctSpace/g, _punctuationOrSpaceGfmStrongEm).replace(/punct/g, _punctuationGfmStrongEm).getRegex();\nvar emStrongRDelimUnd = edit(\n  \"^[^_*]*?\\\\*\\\\*[^_*]*?_[^_*]*?(?=\\\\*\\\\*)|[^_]+(?=[^_])|(?!_)punct(_+)(?=[\\\\s]|$)|notPunctSpace(_+)(?!_)(?=punctSpace|$)|(?!_)punctSpace(_+)(?=notPunctSpace)|[\\\\s](_+)(?!_)(?=punct)|(?!_)punct(_+)(?!_)(?=punct)\",\n  \"gu\"\n).replace(/notPunctSpace/g, _notPunctuationOrSpace).replace(/punctSpace/g, _punctuationOrSpace).replace(/punct/g, _punctuation).getRegex();\nvar anyPunctuation = edit(/\\\\(punct)/, \"gu\").replace(/punct/g, _punctuation).getRegex();\nvar autolink = edit(/^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/).replace(\"scheme\", /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/).replace(\"email\", /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/).getRegex();\nvar _inlineComment = edit(_comment).replace(\"(?:-->|$)\", \"-->\").getRegex();\nvar tag = edit(\n  \"^comment|^</[a-zA-Z][\\\\w:-]*\\\\s*>|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>|^<\\\\?[\\\\s\\\\S]*?\\\\?>|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>\"\n).replace(\"comment\", _inlineComment).replace(\"attribute\", /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/).getRegex();\nvar _inlineLabel = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\nvar link = edit(/^!?\\[(label)\\]\\(\\s*(href)(?:(?:[ \\t]*(?:\\n[ \\t]*)?)(title))?\\s*\\)/).replace(\"label\", _inlineLabel).replace(\"href\", /<(?:\\\\.|[^\\n<>\\\\])+>|[^ \\t\\n\\x00-\\x1f]*/).replace(\"title\", /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/).getRegex();\nvar reflink = edit(/^!?\\[(label)\\]\\[(ref)\\]/).replace(\"label\", _inlineLabel).replace(\"ref\", _blockLabel).getRegex();\nvar nolink = edit(/^!?\\[(ref)\\](?:\\[\\])?/).replace(\"ref\", _blockLabel).getRegex();\nvar reflinkSearch = edit(\"reflink|nolink(?!\\\\()\", \"g\").replace(\"reflink\", reflink).replace(\"nolink\", nolink).getRegex();\nvar inlineNormal = {\n  _backpedal: noopTest,\n  // only used for GFM url\n  anyPunctuation,\n  autolink,\n  blockSkip,\n  br,\n  code: inlineCode,\n  del: noopTest,\n  emStrongLDelim,\n  emStrongRDelimAst,\n  emStrongRDelimUnd,\n  escape,\n  link,\n  nolink,\n  punctuation,\n  reflink,\n  reflinkSearch,\n  tag,\n  text: inlineText,\n  url: noopTest\n};\nvar inlinePedantic = {\n  ...inlineNormal,\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/).replace(\"label\", _inlineLabel).getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/).replace(\"label\", _inlineLabel).getRegex()\n};\nvar inlineGfm = {\n  ...inlineNormal,\n  emStrongRDelimAst: emStrongRDelimAstGfm,\n  emStrongLDelim: emStrongLDelimGfm,\n  url: edit(/^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/, \"i\").replace(\"email\", /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/).getRegex(),\n  _backpedal: /(?:[^?!.,:;*_'\"~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'\"~)]+(?!$))+/,\n  del: /^(~~?)(?=[^\\s~])((?:\\\\.|[^\\\\])*?(?:\\\\.|[^\\s~\\\\]))\\1(?=[^~]|$)/,\n  text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n};\nvar inlineBreaks = {\n  ...inlineGfm,\n  br: edit(br).replace(\"{2,}\", \"*\").getRegex(),\n  text: edit(inlineGfm.text).replace(\"\\\\b_\", \"\\\\b_| {2,}\\\\n\").replace(/\\{2,\\}/g, \"*\").getRegex()\n};\nvar block = {\n  normal: blockNormal,\n  gfm: blockGfm,\n  pedantic: blockPedantic\n};\nvar inline = {\n  normal: inlineNormal,\n  gfm: inlineGfm,\n  breaks: inlineBreaks,\n  pedantic: inlinePedantic\n};\n\n// src/helpers.ts\nvar escapeReplacements = {\n  \"&\": \"&amp;\",\n  \"<\": \"&lt;\",\n  \">\": \"&gt;\",\n  '\"': \"&quot;\",\n  \"'\": \"&#39;\"\n};\nvar getEscapeReplacement = (ch) => escapeReplacements[ch];\nfunction escape2(html2, encode) {\n  if (encode) {\n    if (other.escapeTest.test(html2)) {\n      return html2.replace(other.escapeReplace, getEscapeReplacement);\n    }\n  } else {\n    if (other.escapeTestNoEncode.test(html2)) {\n      return html2.replace(other.escapeReplaceNoEncode, getEscapeReplacement);\n    }\n  }\n  return html2;\n}\nfunction cleanUrl(href) {\n  try {\n    href = encodeURI(href).replace(other.percentDecode, \"%\");\n  } catch {\n    return null;\n  }\n  return href;\n}\nfunction splitCells(tableRow, count) {\n  const row = tableRow.replace(other.findPipe, (match, offset, str) => {\n    let escaped = false;\n    let curr = offset;\n    while (--curr >= 0 && str[curr] === \"\\\\\") escaped = !escaped;\n    if (escaped) {\n      return \"|\";\n    } else {\n      return \" |\";\n    }\n  }), cells = row.split(other.splitPipe);\n  let i = 0;\n  if (!cells[0].trim()) {\n    cells.shift();\n  }\n  if (cells.length > 0 && !cells.at(-1)?.trim()) {\n    cells.pop();\n  }\n  if (count) {\n    if (cells.length > count) {\n      cells.splice(count);\n    } else {\n      while (cells.length < count) cells.push(\"\");\n    }\n  }\n  for (; i < cells.length; i++) {\n    cells[i] = cells[i].trim().replace(other.slashPipe, \"|\");\n  }\n  return cells;\n}\nfunction rtrim(str, c, invert) {\n  const l = str.length;\n  if (l === 0) {\n    return \"\";\n  }\n  let suffLen = 0;\n  while (suffLen < l) {\n    const currChar = str.charAt(l - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n  return str.slice(0, l - suffLen);\n}\nfunction findClosingBracket(str, b) {\n  if (str.indexOf(b[1]) === -1) {\n    return -1;\n  }\n  let level = 0;\n  for (let i = 0; i < str.length; i++) {\n    if (str[i] === \"\\\\\") {\n      i++;\n    } else if (str[i] === b[0]) {\n      level++;\n    } else if (str[i] === b[1]) {\n      level--;\n      if (level < 0) {\n        return i;\n      }\n    }\n  }\n  if (level > 0) {\n    return -2;\n  }\n  return -1;\n}\n\n// src/Tokenizer.ts\nfunction outputLink(cap, link2, raw, lexer2, rules) {\n  const href = link2.href;\n  const title = link2.title || null;\n  const text = cap[1].replace(rules.other.outputLinkReplace, \"$1\");\n  lexer2.state.inLink = true;\n  const token = {\n    type: cap[0].charAt(0) === \"!\" ? \"image\" : \"link\",\n    raw,\n    href,\n    title,\n    text,\n    tokens: lexer2.inlineTokens(text)\n  };\n  lexer2.state.inLink = false;\n  return token;\n}\nfunction indentCodeCompensation(raw, text, rules) {\n  const matchIndentToCode = raw.match(rules.other.indentCodeCompensation);\n  if (matchIndentToCode === null) {\n    return text;\n  }\n  const indentToCode = matchIndentToCode[1];\n  return text.split(\"\\n\").map((node) => {\n    const matchIndentInNode = node.match(rules.other.beginningSpace);\n    if (matchIndentInNode === null) {\n      return node;\n    }\n    const [indentInNode] = matchIndentInNode;\n    if (indentInNode.length >= indentToCode.length) {\n      return node.slice(indentToCode.length);\n    }\n    return node;\n  }).join(\"\\n\");\n}\nvar _Tokenizer = class {\n  options;\n  rules;\n  // set by the lexer\n  lexer;\n  // set by the lexer\n  constructor(options2) {\n    this.options = options2 || _defaults;\n  }\n  space(src) {\n    const cap = this.rules.block.newline.exec(src);\n    if (cap && cap[0].length > 0) {\n      return {\n        type: \"space\",\n        raw: cap[0]\n      };\n    }\n  }\n  code(src) {\n    const cap = this.rules.block.code.exec(src);\n    if (cap) {\n      const text = cap[0].replace(this.rules.other.codeRemoveIndent, \"\");\n      return {\n        type: \"code\",\n        raw: cap[0],\n        codeBlockStyle: \"indented\",\n        text: !this.options.pedantic ? rtrim(text, \"\\n\") : text\n      };\n    }\n  }\n  fences(src) {\n    const cap = this.rules.block.fences.exec(src);\n    if (cap) {\n      const raw = cap[0];\n      const text = indentCodeCompensation(raw, cap[3] || \"\", this.rules);\n      return {\n        type: \"code\",\n        raw,\n        lang: cap[2] ? cap[2].trim().replace(this.rules.inline.anyPunctuation, \"$1\") : cap[2],\n        text\n      };\n    }\n  }\n  heading(src) {\n    const cap = this.rules.block.heading.exec(src);\n    if (cap) {\n      let text = cap[2].trim();\n      if (this.rules.other.endingHash.test(text)) {\n        const trimmed = rtrim(text, \"#\");\n        if (this.options.pedantic) {\n          text = trimmed.trim();\n        } else if (!trimmed || this.rules.other.endingSpaceChar.test(trimmed)) {\n          text = trimmed.trim();\n        }\n      }\n      return {\n        type: \"heading\",\n        raw: cap[0],\n        depth: cap[1].length,\n        text,\n        tokens: this.lexer.inline(text)\n      };\n    }\n  }\n  hr(src) {\n    const cap = this.rules.block.hr.exec(src);\n    if (cap) {\n      return {\n        type: \"hr\",\n        raw: rtrim(cap[0], \"\\n\")\n      };\n    }\n  }\n  blockquote(src) {\n    const cap = this.rules.block.blockquote.exec(src);\n    if (cap) {\n      let lines = rtrim(cap[0], \"\\n\").split(\"\\n\");\n      let raw = \"\";\n      let text = \"\";\n      const tokens = [];\n      while (lines.length > 0) {\n        let inBlockquote = false;\n        const currentLines = [];\n        let i;\n        for (i = 0; i < lines.length; i++) {\n          if (this.rules.other.blockquoteStart.test(lines[i])) {\n            currentLines.push(lines[i]);\n            inBlockquote = true;\n          } else if (!inBlockquote) {\n            currentLines.push(lines[i]);\n          } else {\n            break;\n          }\n        }\n        lines = lines.slice(i);\n        const currentRaw = currentLines.join(\"\\n\");\n        const currentText = currentRaw.replace(this.rules.other.blockquoteSetextReplace, \"\\n    $1\").replace(this.rules.other.blockquoteSetextReplace2, \"\");\n        raw = raw ? `${raw}\n${currentRaw}` : currentRaw;\n        text = text ? `${text}\n${currentText}` : currentText;\n        const top = this.lexer.state.top;\n        this.lexer.state.top = true;\n        this.lexer.blockTokens(currentText, tokens, true);\n        this.lexer.state.top = top;\n        if (lines.length === 0) {\n          break;\n        }\n        const lastToken = tokens.at(-1);\n        if (lastToken?.type === \"code\") {\n          break;\n        } else if (lastToken?.type === \"blockquote\") {\n          const oldToken = lastToken;\n          const newText = oldToken.raw + \"\\n\" + lines.join(\"\\n\");\n          const newToken = this.blockquote(newText);\n          tokens[tokens.length - 1] = newToken;\n          raw = raw.substring(0, raw.length - oldToken.raw.length) + newToken.raw;\n          text = text.substring(0, text.length - oldToken.text.length) + newToken.text;\n          break;\n        } else if (lastToken?.type === \"list\") {\n          const oldToken = lastToken;\n          const newText = oldToken.raw + \"\\n\" + lines.join(\"\\n\");\n          const newToken = this.list(newText);\n          tokens[tokens.length - 1] = newToken;\n          raw = raw.substring(0, raw.length - lastToken.raw.length) + newToken.raw;\n          text = text.substring(0, text.length - oldToken.raw.length) + newToken.raw;\n          lines = newText.substring(tokens.at(-1).raw.length).split(\"\\n\");\n          continue;\n        }\n      }\n      return {\n        type: \"blockquote\",\n        raw,\n        tokens,\n        text\n      };\n    }\n  }\n  list(src) {\n    let cap = this.rules.block.list.exec(src);\n    if (cap) {\n      let bull = cap[1].trim();\n      const isordered = bull.length > 1;\n      const list2 = {\n        type: \"list\",\n        raw: \"\",\n        ordered: isordered,\n        start: isordered ? +bull.slice(0, -1) : \"\",\n        loose: false,\n        items: []\n      };\n      bull = isordered ? `\\\\d{1,9}\\\\${bull.slice(-1)}` : `\\\\${bull}`;\n      if (this.options.pedantic) {\n        bull = isordered ? bull : \"[*+-]\";\n      }\n      const itemRegex = this.rules.other.listItemRegex(bull);\n      let endsWithBlankLine = false;\n      while (src) {\n        let endEarly = false;\n        let raw = \"\";\n        let itemContents = \"\";\n        if (!(cap = itemRegex.exec(src))) {\n          break;\n        }\n        if (this.rules.block.hr.test(src)) {\n          break;\n        }\n        raw = cap[0];\n        src = src.substring(raw.length);\n        let line = cap[2].split(\"\\n\", 1)[0].replace(this.rules.other.listReplaceTabs, (t) => \" \".repeat(3 * t.length));\n        let nextLine = src.split(\"\\n\", 1)[0];\n        let blankLine = !line.trim();\n        let indent = 0;\n        if (this.options.pedantic) {\n          indent = 2;\n          itemContents = line.trimStart();\n        } else if (blankLine) {\n          indent = cap[1].length + 1;\n        } else {\n          indent = cap[2].search(this.rules.other.nonSpaceChar);\n          indent = indent > 4 ? 1 : indent;\n          itemContents = line.slice(indent);\n          indent += cap[1].length;\n        }\n        if (blankLine && this.rules.other.blankLine.test(nextLine)) {\n          raw += nextLine + \"\\n\";\n          src = src.substring(nextLine.length + 1);\n          endEarly = true;\n        }\n        if (!endEarly) {\n          const nextBulletRegex = this.rules.other.nextBulletRegex(indent);\n          const hrRegex = this.rules.other.hrRegex(indent);\n          const fencesBeginRegex = this.rules.other.fencesBeginRegex(indent);\n          const headingBeginRegex = this.rules.other.headingBeginRegex(indent);\n          const htmlBeginRegex = this.rules.other.htmlBeginRegex(indent);\n          while (src) {\n            const rawLine = src.split(\"\\n\", 1)[0];\n            let nextLineWithoutTabs;\n            nextLine = rawLine;\n            if (this.options.pedantic) {\n              nextLine = nextLine.replace(this.rules.other.listReplaceNesting, \"  \");\n              nextLineWithoutTabs = nextLine;\n            } else {\n              nextLineWithoutTabs = nextLine.replace(this.rules.other.tabCharGlobal, \"    \");\n            }\n            if (fencesBeginRegex.test(nextLine)) {\n              break;\n            }\n            if (headingBeginRegex.test(nextLine)) {\n              break;\n            }\n            if (htmlBeginRegex.test(nextLine)) {\n              break;\n            }\n            if (nextBulletRegex.test(nextLine)) {\n              break;\n            }\n            if (hrRegex.test(nextLine)) {\n              break;\n            }\n            if (nextLineWithoutTabs.search(this.rules.other.nonSpaceChar) >= indent || !nextLine.trim()) {\n              itemContents += \"\\n\" + nextLineWithoutTabs.slice(indent);\n            } else {\n              if (blankLine) {\n                break;\n              }\n              if (line.replace(this.rules.other.tabCharGlobal, \"    \").search(this.rules.other.nonSpaceChar) >= 4) {\n                break;\n              }\n              if (fencesBeginRegex.test(line)) {\n                break;\n              }\n              if (headingBeginRegex.test(line)) {\n                break;\n              }\n              if (hrRegex.test(line)) {\n                break;\n              }\n              itemContents += \"\\n\" + nextLine;\n            }\n            if (!blankLine && !nextLine.trim()) {\n              blankLine = true;\n            }\n            raw += rawLine + \"\\n\";\n            src = src.substring(rawLine.length + 1);\n            line = nextLineWithoutTabs.slice(indent);\n          }\n        }\n        if (!list2.loose) {\n          if (endsWithBlankLine) {\n            list2.loose = true;\n          } else if (this.rules.other.doubleBlankLine.test(raw)) {\n            endsWithBlankLine = true;\n          }\n        }\n        let istask = null;\n        let ischecked;\n        if (this.options.gfm) {\n          istask = this.rules.other.listIsTask.exec(itemContents);\n          if (istask) {\n            ischecked = istask[0] !== \"[ ] \";\n            itemContents = itemContents.replace(this.rules.other.listReplaceTask, \"\");\n          }\n        }\n        list2.items.push({\n          type: \"list_item\",\n          raw,\n          task: !!istask,\n          checked: ischecked,\n          loose: false,\n          text: itemContents,\n          tokens: []\n        });\n        list2.raw += raw;\n      }\n      const lastItem = list2.items.at(-1);\n      if (lastItem) {\n        lastItem.raw = lastItem.raw.trimEnd();\n        lastItem.text = lastItem.text.trimEnd();\n      } else {\n        return;\n      }\n      list2.raw = list2.raw.trimEnd();\n      for (let i = 0; i < list2.items.length; i++) {\n        this.lexer.state.top = false;\n        list2.items[i].tokens = this.lexer.blockTokens(list2.items[i].text, []);\n        if (!list2.loose) {\n          const spacers = list2.items[i].tokens.filter((t) => t.type === \"space\");\n          const hasMultipleLineBreaks = spacers.length > 0 && spacers.some((t) => this.rules.other.anyLine.test(t.raw));\n          list2.loose = hasMultipleLineBreaks;\n        }\n      }\n      if (list2.loose) {\n        for (let i = 0; i < list2.items.length; i++) {\n          list2.items[i].loose = true;\n        }\n      }\n      return list2;\n    }\n  }\n  html(src) {\n    const cap = this.rules.block.html.exec(src);\n    if (cap) {\n      const token = {\n        type: \"html\",\n        block: true,\n        raw: cap[0],\n        pre: cap[1] === \"pre\" || cap[1] === \"script\" || cap[1] === \"style\",\n        text: cap[0]\n      };\n      return token;\n    }\n  }\n  def(src) {\n    const cap = this.rules.block.def.exec(src);\n    if (cap) {\n      const tag2 = cap[1].toLowerCase().replace(this.rules.other.multipleSpaceGlobal, \" \");\n      const href = cap[2] ? cap[2].replace(this.rules.other.hrefBrackets, \"$1\").replace(this.rules.inline.anyPunctuation, \"$1\") : \"\";\n      const title = cap[3] ? cap[3].substring(1, cap[3].length - 1).replace(this.rules.inline.anyPunctuation, \"$1\") : cap[3];\n      return {\n        type: \"def\",\n        tag: tag2,\n        raw: cap[0],\n        href,\n        title\n      };\n    }\n  }\n  table(src) {\n    const cap = this.rules.block.table.exec(src);\n    if (!cap) {\n      return;\n    }\n    if (!this.rules.other.tableDelimiter.test(cap[2])) {\n      return;\n    }\n    const headers = splitCells(cap[1]);\n    const aligns = cap[2].replace(this.rules.other.tableAlignChars, \"\").split(\"|\");\n    const rows = cap[3]?.trim() ? cap[3].replace(this.rules.other.tableRowBlankLine, \"\").split(\"\\n\") : [];\n    const item = {\n      type: \"table\",\n      raw: cap[0],\n      header: [],\n      align: [],\n      rows: []\n    };\n    if (headers.length !== aligns.length) {\n      return;\n    }\n    for (const align of aligns) {\n      if (this.rules.other.tableAlignRight.test(align)) {\n        item.align.push(\"right\");\n      } else if (this.rules.other.tableAlignCenter.test(align)) {\n        item.align.push(\"center\");\n      } else if (this.rules.other.tableAlignLeft.test(align)) {\n        item.align.push(\"left\");\n      } else {\n        item.align.push(null);\n      }\n    }\n    for (let i = 0; i < headers.length; i++) {\n      item.header.push({\n        text: headers[i],\n        tokens: this.lexer.inline(headers[i]),\n        header: true,\n        align: item.align[i]\n      });\n    }\n    for (const row of rows) {\n      item.rows.push(splitCells(row, item.header.length).map((cell, i) => {\n        return {\n          text: cell,\n          tokens: this.lexer.inline(cell),\n          header: false,\n          align: item.align[i]\n        };\n      }));\n    }\n    return item;\n  }\n  lheading(src) {\n    const cap = this.rules.block.lheading.exec(src);\n    if (cap) {\n      return {\n        type: \"heading\",\n        raw: cap[0],\n        depth: cap[2].charAt(0) === \"=\" ? 1 : 2,\n        text: cap[1],\n        tokens: this.lexer.inline(cap[1])\n      };\n    }\n  }\n  paragraph(src) {\n    const cap = this.rules.block.paragraph.exec(src);\n    if (cap) {\n      const text = cap[1].charAt(cap[1].length - 1) === \"\\n\" ? cap[1].slice(0, -1) : cap[1];\n      return {\n        type: \"paragraph\",\n        raw: cap[0],\n        text,\n        tokens: this.lexer.inline(text)\n      };\n    }\n  }\n  text(src) {\n    const cap = this.rules.block.text.exec(src);\n    if (cap) {\n      return {\n        type: \"text\",\n        raw: cap[0],\n        text: cap[0],\n        tokens: this.lexer.inline(cap[0])\n      };\n    }\n  }\n  escape(src) {\n    const cap = this.rules.inline.escape.exec(src);\n    if (cap) {\n      return {\n        type: \"escape\",\n        raw: cap[0],\n        text: cap[1]\n      };\n    }\n  }\n  tag(src) {\n    const cap = this.rules.inline.tag.exec(src);\n    if (cap) {\n      if (!this.lexer.state.inLink && this.rules.other.startATag.test(cap[0])) {\n        this.lexer.state.inLink = true;\n      } else if (this.lexer.state.inLink && this.rules.other.endATag.test(cap[0])) {\n        this.lexer.state.inLink = false;\n      }\n      if (!this.lexer.state.inRawBlock && this.rules.other.startPreScriptTag.test(cap[0])) {\n        this.lexer.state.inRawBlock = true;\n      } else if (this.lexer.state.inRawBlock && this.rules.other.endPreScriptTag.test(cap[0])) {\n        this.lexer.state.inRawBlock = false;\n      }\n      return {\n        type: \"html\",\n        raw: cap[0],\n        inLink: this.lexer.state.inLink,\n        inRawBlock: this.lexer.state.inRawBlock,\n        block: false,\n        text: cap[0]\n      };\n    }\n  }\n  link(src) {\n    const cap = this.rules.inline.link.exec(src);\n    if (cap) {\n      const trimmedUrl = cap[2].trim();\n      if (!this.options.pedantic && this.rules.other.startAngleBracket.test(trimmedUrl)) {\n        if (!this.rules.other.endAngleBracket.test(trimmedUrl)) {\n          return;\n        }\n        const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), \"\\\\\");\n        if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n          return;\n        }\n      } else {\n        const lastParenIndex = findClosingBracket(cap[2], \"()\");\n        if (lastParenIndex === -2) {\n          return;\n        }\n        if (lastParenIndex > -1) {\n          const start = cap[0].indexOf(\"!\") === 0 ? 5 : 4;\n          const linkLen = start + cap[1].length + lastParenIndex;\n          cap[2] = cap[2].substring(0, lastParenIndex);\n          cap[0] = cap[0].substring(0, linkLen).trim();\n          cap[3] = \"\";\n        }\n      }\n      let href = cap[2];\n      let title = \"\";\n      if (this.options.pedantic) {\n        const link2 = this.rules.other.pedanticHrefTitle.exec(href);\n        if (link2) {\n          href = link2[1];\n          title = link2[3];\n        }\n      } else {\n        title = cap[3] ? cap[3].slice(1, -1) : \"\";\n      }\n      href = href.trim();\n      if (this.rules.other.startAngleBracket.test(href)) {\n        if (this.options.pedantic && !this.rules.other.endAngleBracket.test(trimmedUrl)) {\n          href = href.slice(1);\n        } else {\n          href = href.slice(1, -1);\n        }\n      }\n      return outputLink(cap, {\n        href: href ? href.replace(this.rules.inline.anyPunctuation, \"$1\") : href,\n        title: title ? title.replace(this.rules.inline.anyPunctuation, \"$1\") : title\n      }, cap[0], this.lexer, this.rules);\n    }\n  }\n  reflink(src, links) {\n    let cap;\n    if ((cap = this.rules.inline.reflink.exec(src)) || (cap = this.rules.inline.nolink.exec(src))) {\n      const linkString = (cap[2] || cap[1]).replace(this.rules.other.multipleSpaceGlobal, \" \");\n      const link2 = links[linkString.toLowerCase()];\n      if (!link2) {\n        const text = cap[0].charAt(0);\n        return {\n          type: \"text\",\n          raw: text,\n          text\n        };\n      }\n      return outputLink(cap, link2, cap[0], this.lexer, this.rules);\n    }\n  }\n  emStrong(src, maskedSrc, prevChar = \"\") {\n    let match = this.rules.inline.emStrongLDelim.exec(src);\n    if (!match) return;\n    if (match[3] && prevChar.match(this.rules.other.unicodeAlphaNumeric)) return;\n    const nextChar = match[1] || match[2] || \"\";\n    if (!nextChar || !prevChar || this.rules.inline.punctuation.exec(prevChar)) {\n      const lLength = [...match[0]].length - 1;\n      let rDelim, rLength, delimTotal = lLength, midDelimTotal = 0;\n      const endReg = match[0][0] === \"*\" ? this.rules.inline.emStrongRDelimAst : this.rules.inline.emStrongRDelimUnd;\n      endReg.lastIndex = 0;\n      maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n      while ((match = endReg.exec(maskedSrc)) != null) {\n        rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n        if (!rDelim) continue;\n        rLength = [...rDelim].length;\n        if (match[3] || match[4]) {\n          delimTotal += rLength;\n          continue;\n        } else if (match[5] || match[6]) {\n          if (lLength % 3 && !((lLength + rLength) % 3)) {\n            midDelimTotal += rLength;\n            continue;\n          }\n        }\n        delimTotal -= rLength;\n        if (delimTotal > 0) continue;\n        rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n        const lastCharLength = [...match[0]][0].length;\n        const raw = src.slice(0, lLength + match.index + lastCharLength + rLength);\n        if (Math.min(lLength, rLength) % 2) {\n          const text2 = raw.slice(1, -1);\n          return {\n            type: \"em\",\n            raw,\n            text: text2,\n            tokens: this.lexer.inlineTokens(text2)\n          };\n        }\n        const text = raw.slice(2, -2);\n        return {\n          type: \"strong\",\n          raw,\n          text,\n          tokens: this.lexer.inlineTokens(text)\n        };\n      }\n    }\n  }\n  codespan(src) {\n    const cap = this.rules.inline.code.exec(src);\n    if (cap) {\n      let text = cap[2].replace(this.rules.other.newLineCharGlobal, \" \");\n      const hasNonSpaceChars = this.rules.other.nonSpaceChar.test(text);\n      const hasSpaceCharsOnBothEnds = this.rules.other.startingSpaceChar.test(text) && this.rules.other.endingSpaceChar.test(text);\n      if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n        text = text.substring(1, text.length - 1);\n      }\n      return {\n        type: \"codespan\",\n        raw: cap[0],\n        text\n      };\n    }\n  }\n  br(src) {\n    const cap = this.rules.inline.br.exec(src);\n    if (cap) {\n      return {\n        type: \"br\",\n        raw: cap[0]\n      };\n    }\n  }\n  del(src) {\n    const cap = this.rules.inline.del.exec(src);\n    if (cap) {\n      return {\n        type: \"del\",\n        raw: cap[0],\n        text: cap[2],\n        tokens: this.lexer.inlineTokens(cap[2])\n      };\n    }\n  }\n  autolink(src) {\n    const cap = this.rules.inline.autolink.exec(src);\n    if (cap) {\n      let text, href;\n      if (cap[2] === \"@\") {\n        text = cap[1];\n        href = \"mailto:\" + text;\n      } else {\n        text = cap[1];\n        href = text;\n      }\n      return {\n        type: \"link\",\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: \"text\",\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n  url(src) {\n    let cap;\n    if (cap = this.rules.inline.url.exec(src)) {\n      let text, href;\n      if (cap[2] === \"@\") {\n        text = cap[0];\n        href = \"mailto:\" + text;\n      } else {\n        let prevCapZero;\n        do {\n          prevCapZero = cap[0];\n          cap[0] = this.rules.inline._backpedal.exec(cap[0])?.[0] ?? \"\";\n        } while (prevCapZero !== cap[0]);\n        text = cap[0];\n        if (cap[1] === \"www.\") {\n          href = \"http://\" + cap[0];\n        } else {\n          href = cap[0];\n        }\n      }\n      return {\n        type: \"link\",\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: \"text\",\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n  inlineText(src) {\n    const cap = this.rules.inline.text.exec(src);\n    if (cap) {\n      const escaped = this.lexer.state.inRawBlock;\n      return {\n        type: \"text\",\n        raw: cap[0],\n        text: cap[0],\n        escaped\n      };\n    }\n  }\n};\n\n// src/Lexer.ts\nvar _Lexer = class __Lexer {\n  tokens;\n  options;\n  state;\n  tokenizer;\n  inlineQueue;\n  constructor(options2) {\n    this.tokens = [];\n    this.tokens.links = /* @__PURE__ */ Object.create(null);\n    this.options = options2 || _defaults;\n    this.options.tokenizer = this.options.tokenizer || new _Tokenizer();\n    this.tokenizer = this.options.tokenizer;\n    this.tokenizer.options = this.options;\n    this.tokenizer.lexer = this;\n    this.inlineQueue = [];\n    this.state = {\n      inLink: false,\n      inRawBlock: false,\n      top: true\n    };\n    const rules = {\n      other,\n      block: block.normal,\n      inline: inline.normal\n    };\n    if (this.options.pedantic) {\n      rules.block = block.pedantic;\n      rules.inline = inline.pedantic;\n    } else if (this.options.gfm) {\n      rules.block = block.gfm;\n      if (this.options.breaks) {\n        rules.inline = inline.breaks;\n      } else {\n        rules.inline = inline.gfm;\n      }\n    }\n    this.tokenizer.rules = rules;\n  }\n  /**\n   * Expose Rules\n   */\n  static get rules() {\n    return {\n      block,\n      inline\n    };\n  }\n  /**\n   * Static Lex Method\n   */\n  static lex(src, options2) {\n    const lexer2 = new __Lexer(options2);\n    return lexer2.lex(src);\n  }\n  /**\n   * Static Lex Inline Method\n   */\n  static lexInline(src, options2) {\n    const lexer2 = new __Lexer(options2);\n    return lexer2.inlineTokens(src);\n  }\n  /**\n   * Preprocessing\n   */\n  lex(src) {\n    src = src.replace(other.carriageReturn, \"\\n\");\n    this.blockTokens(src, this.tokens);\n    for (let i = 0; i < this.inlineQueue.length; i++) {\n      const next = this.inlineQueue[i];\n      this.inlineTokens(next.src, next.tokens);\n    }\n    this.inlineQueue = [];\n    return this.tokens;\n  }\n  blockTokens(src, tokens = [], lastParagraphClipped = false) {\n    if (this.options.pedantic) {\n      src = src.replace(other.tabCharGlobal, \"    \").replace(other.spaceLine, \"\");\n    }\n    while (src) {\n      let token;\n      if (this.options.extensions?.block?.some((extTokenizer) => {\n        if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          return true;\n        }\n        return false;\n      })) {\n        continue;\n      }\n      if (token = this.tokenizer.space(src)) {\n        src = src.substring(token.raw.length);\n        const lastToken = tokens.at(-1);\n        if (token.raw.length === 1 && lastToken !== void 0) {\n          lastToken.raw += \"\\n\";\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n      if (token = this.tokenizer.code(src)) {\n        src = src.substring(token.raw.length);\n        const lastToken = tokens.at(-1);\n        if (lastToken?.type === \"paragraph\" || lastToken?.type === \"text\") {\n          lastToken.raw += \"\\n\" + token.raw;\n          lastToken.text += \"\\n\" + token.text;\n          this.inlineQueue.at(-1).src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n      if (token = this.tokenizer.fences(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n      if (token = this.tokenizer.heading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n      if (token = this.tokenizer.hr(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n      if (token = this.tokenizer.blockquote(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n      if (token = this.tokenizer.list(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n      if (token = this.tokenizer.html(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n      if (token = this.tokenizer.def(src)) {\n        src = src.substring(token.raw.length);\n        const lastToken = tokens.at(-1);\n        if (lastToken?.type === \"paragraph\" || lastToken?.type === \"text\") {\n          lastToken.raw += \"\\n\" + token.raw;\n          lastToken.text += \"\\n\" + token.raw;\n          this.inlineQueue.at(-1).src = lastToken.text;\n        } else if (!this.tokens.links[token.tag]) {\n          this.tokens.links[token.tag] = {\n            href: token.href,\n            title: token.title\n          };\n        }\n        continue;\n      }\n      if (token = this.tokenizer.table(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n      if (token = this.tokenizer.lheading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n      let cutSrc = src;\n      if (this.options.extensions?.startBlock) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startBlock.forEach((getStartIndex) => {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === \"number\" && tempStart >= 0) {\n            startIndex = Math.min(startIndex, tempStart);\n          }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n        const lastToken = tokens.at(-1);\n        if (lastParagraphClipped && lastToken?.type === \"paragraph\") {\n          lastToken.raw += \"\\n\" + token.raw;\n          lastToken.text += \"\\n\" + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue.at(-1).src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        lastParagraphClipped = cutSrc.length !== src.length;\n        src = src.substring(token.raw.length);\n        continue;\n      }\n      if (token = this.tokenizer.text(src)) {\n        src = src.substring(token.raw.length);\n        const lastToken = tokens.at(-1);\n        if (lastToken?.type === \"text\") {\n          lastToken.raw += \"\\n\" + token.raw;\n          lastToken.text += \"\\n\" + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue.at(-1).src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n      if (src) {\n        const errMsg = \"Infinite loop on byte: \" + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n    this.state.top = true;\n    return tokens;\n  }\n  inline(src, tokens = []) {\n    this.inlineQueue.push({ src, tokens });\n    return tokens;\n  }\n  /**\n   * Lexing/Compiling\n   */\n  inlineTokens(src, tokens = []) {\n    let maskedSrc = src;\n    let match = null;\n    if (this.tokens.links) {\n      const links = Object.keys(this.tokens.links);\n      if (links.length > 0) {\n        while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n          if (links.includes(match[0].slice(match[0].lastIndexOf(\"[\") + 1, -1))) {\n            maskedSrc = maskedSrc.slice(0, match.index) + \"[\" + \"a\".repeat(match[0].length - 2) + \"]\" + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n          }\n        }\n      }\n    }\n    while ((match = this.tokenizer.rules.inline.anyPunctuation.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index) + \"++\" + maskedSrc.slice(this.tokenizer.rules.inline.anyPunctuation.lastIndex);\n    }\n    while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index) + \"[\" + \"a\".repeat(match[0].length - 2) + \"]\" + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n    }\n    let keepPrevChar = false;\n    let prevChar = \"\";\n    while (src) {\n      if (!keepPrevChar) {\n        prevChar = \"\";\n      }\n      keepPrevChar = false;\n      let token;\n      if (this.options.extensions?.inline?.some((extTokenizer) => {\n        if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          return true;\n        }\n        return false;\n      })) {\n        continue;\n      }\n      if (token = this.tokenizer.escape(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n      if (token = this.tokenizer.tag(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n      if (token = this.tokenizer.link(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n      if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n        src = src.substring(token.raw.length);\n        const lastToken = tokens.at(-1);\n        if (token.type === \"text\" && lastToken?.type === \"text\") {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n      if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n      if (token = this.tokenizer.codespan(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n      if (token = this.tokenizer.br(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n      if (token = this.tokenizer.del(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n      if (token = this.tokenizer.autolink(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n      if (!this.state.inLink && (token = this.tokenizer.url(src))) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n      let cutSrc = src;\n      if (this.options.extensions?.startInline) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startInline.forEach((getStartIndex) => {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === \"number\" && tempStart >= 0) {\n            startIndex = Math.min(startIndex, tempStart);\n          }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (token = this.tokenizer.inlineText(cutSrc)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.slice(-1) !== \"_\") {\n          prevChar = token.raw.slice(-1);\n        }\n        keepPrevChar = true;\n        const lastToken = tokens.at(-1);\n        if (lastToken?.type === \"text\") {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n      if (src) {\n        const errMsg = \"Infinite loop on byte: \" + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n    return tokens;\n  }\n};\n\n// src/Renderer.ts\nvar _Renderer = class {\n  options;\n  parser;\n  // set by the parser\n  constructor(options2) {\n    this.options = options2 || _defaults;\n  }\n  space(token) {\n    return \"\";\n  }\n  code({ text, lang, escaped }) {\n    const langString = (lang || \"\").match(other.notSpaceStart)?.[0];\n    const code = text.replace(other.endingNewline, \"\") + \"\\n\";\n    if (!langString) {\n      return \"<pre><code>\" + (escaped ? code : escape2(code, true)) + \"</code></pre>\\n\";\n    }\n    return '<pre><code class=\"language-' + escape2(langString) + '\">' + (escaped ? code : escape2(code, true)) + \"</code></pre>\\n\";\n  }\n  blockquote({ tokens }) {\n    const body = this.parser.parse(tokens);\n    return `<blockquote>\n${body}</blockquote>\n`;\n  }\n  html({ text }) {\n    return text;\n  }\n  heading({ tokens, depth }) {\n    return `<h${depth}>${this.parser.parseInline(tokens)}</h${depth}>\n`;\n  }\n  hr(token) {\n    return \"<hr>\\n\";\n  }\n  list(token) {\n    const ordered = token.ordered;\n    const start = token.start;\n    let body = \"\";\n    for (let j = 0; j < token.items.length; j++) {\n      const item = token.items[j];\n      body += this.listitem(item);\n    }\n    const type = ordered ? \"ol\" : \"ul\";\n    const startAttr = ordered && start !== 1 ? ' start=\"' + start + '\"' : \"\";\n    return \"<\" + type + startAttr + \">\\n\" + body + \"</\" + type + \">\\n\";\n  }\n  listitem(item) {\n    let itemBody = \"\";\n    if (item.task) {\n      const checkbox = this.checkbox({ checked: !!item.checked });\n      if (item.loose) {\n        if (item.tokens[0]?.type === \"paragraph\") {\n          item.tokens[0].text = checkbox + \" \" + item.tokens[0].text;\n          if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === \"text\") {\n            item.tokens[0].tokens[0].text = checkbox + \" \" + escape2(item.tokens[0].tokens[0].text);\n            item.tokens[0].tokens[0].escaped = true;\n          }\n        } else {\n          item.tokens.unshift({\n            type: \"text\",\n            raw: checkbox + \" \",\n            text: checkbox + \" \",\n            escaped: true\n          });\n        }\n      } else {\n        itemBody += checkbox + \" \";\n      }\n    }\n    itemBody += this.parser.parse(item.tokens, !!item.loose);\n    return `<li>${itemBody}</li>\n`;\n  }\n  checkbox({ checked }) {\n    return \"<input \" + (checked ? 'checked=\"\" ' : \"\") + 'disabled=\"\" type=\"checkbox\">';\n  }\n  paragraph({ tokens }) {\n    return `<p>${this.parser.parseInline(tokens)}</p>\n`;\n  }\n  table(token) {\n    let header = \"\";\n    let cell = \"\";\n    for (let j = 0; j < token.header.length; j++) {\n      cell += this.tablecell(token.header[j]);\n    }\n    header += this.tablerow({ text: cell });\n    let body = \"\";\n    for (let j = 0; j < token.rows.length; j++) {\n      const row = token.rows[j];\n      cell = \"\";\n      for (let k = 0; k < row.length; k++) {\n        cell += this.tablecell(row[k]);\n      }\n      body += this.tablerow({ text: cell });\n    }\n    if (body) body = `<tbody>${body}</tbody>`;\n    return \"<table>\\n<thead>\\n\" + header + \"</thead>\\n\" + body + \"</table>\\n\";\n  }\n  tablerow({ text }) {\n    return `<tr>\n${text}</tr>\n`;\n  }\n  tablecell(token) {\n    const content = this.parser.parseInline(token.tokens);\n    const type = token.header ? \"th\" : \"td\";\n    const tag2 = token.align ? `<${type} align=\"${token.align}\">` : `<${type}>`;\n    return tag2 + content + `</${type}>\n`;\n  }\n  /**\n   * span level renderer\n   */\n  strong({ tokens }) {\n    return `<strong>${this.parser.parseInline(tokens)}</strong>`;\n  }\n  em({ tokens }) {\n    return `<em>${this.parser.parseInline(tokens)}</em>`;\n  }\n  codespan({ text }) {\n    return `<code>${escape2(text, true)}</code>`;\n  }\n  br(token) {\n    return \"<br>\";\n  }\n  del({ tokens }) {\n    return `<del>${this.parser.parseInline(tokens)}</del>`;\n  }\n  link({ href, title, tokens }) {\n    const text = this.parser.parseInline(tokens);\n    const cleanHref = cleanUrl(href);\n    if (cleanHref === null) {\n      return text;\n    }\n    href = cleanHref;\n    let out = '<a href=\"' + href + '\"';\n    if (title) {\n      out += ' title=\"' + escape2(title) + '\"';\n    }\n    out += \">\" + text + \"</a>\";\n    return out;\n  }\n  image({ href, title, text, tokens }) {\n    if (tokens) {\n      text = this.parser.parseInline(tokens, this.parser.textRenderer);\n    }\n    const cleanHref = cleanUrl(href);\n    if (cleanHref === null) {\n      return escape2(text);\n    }\n    href = cleanHref;\n    let out = `<img src=\"${href}\" alt=\"${text}\"`;\n    if (title) {\n      out += ` title=\"${escape2(title)}\"`;\n    }\n    out += \">\";\n    return out;\n  }\n  text(token) {\n    return \"tokens\" in token && token.tokens ? this.parser.parseInline(token.tokens) : \"escaped\" in token && token.escaped ? token.text : escape2(token.text);\n  }\n};\n\n// src/TextRenderer.ts\nvar _TextRenderer = class {\n  // no need for block level renderers\n  strong({ text }) {\n    return text;\n  }\n  em({ text }) {\n    return text;\n  }\n  codespan({ text }) {\n    return text;\n  }\n  del({ text }) {\n    return text;\n  }\n  html({ text }) {\n    return text;\n  }\n  text({ text }) {\n    return text;\n  }\n  link({ text }) {\n    return \"\" + text;\n  }\n  image({ text }) {\n    return \"\" + text;\n  }\n  br() {\n    return \"\";\n  }\n};\n\n// src/Parser.ts\nvar _Parser = class __Parser {\n  options;\n  renderer;\n  textRenderer;\n  constructor(options2) {\n    this.options = options2 || _defaults;\n    this.options.renderer = this.options.renderer || new _Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n    this.renderer.parser = this;\n    this.textRenderer = new _TextRenderer();\n  }\n  /**\n   * Static Parse Method\n   */\n  static parse(tokens, options2) {\n    const parser2 = new __Parser(options2);\n    return parser2.parse(tokens);\n  }\n  /**\n   * Static Parse Inline Method\n   */\n  static parseInline(tokens, options2) {\n    const parser2 = new __Parser(options2);\n    return parser2.parseInline(tokens);\n  }\n  /**\n   * Parse Loop\n   */\n  parse(tokens, top = true) {\n    let out = \"\";\n    for (let i = 0; i < tokens.length; i++) {\n      const anyToken = tokens[i];\n      if (this.options.extensions?.renderers?.[anyToken.type]) {\n        const genericToken = anyToken;\n        const ret = this.options.extensions.renderers[genericToken.type].call({ parser: this }, genericToken);\n        if (ret !== false || ![\"space\", \"hr\", \"heading\", \"code\", \"table\", \"blockquote\", \"list\", \"html\", \"paragraph\", \"text\"].includes(genericToken.type)) {\n          out += ret || \"\";\n          continue;\n        }\n      }\n      const token = anyToken;\n      switch (token.type) {\n        case \"space\": {\n          out += this.renderer.space(token);\n          continue;\n        }\n        case \"hr\": {\n          out += this.renderer.hr(token);\n          continue;\n        }\n        case \"heading\": {\n          out += this.renderer.heading(token);\n          continue;\n        }\n        case \"code\": {\n          out += this.renderer.code(token);\n          continue;\n        }\n        case \"table\": {\n          out += this.renderer.table(token);\n          continue;\n        }\n        case \"blockquote\": {\n          out += this.renderer.blockquote(token);\n          continue;\n        }\n        case \"list\": {\n          out += this.renderer.list(token);\n          continue;\n        }\n        case \"html\": {\n          out += this.renderer.html(token);\n          continue;\n        }\n        case \"paragraph\": {\n          out += this.renderer.paragraph(token);\n          continue;\n        }\n        case \"text\": {\n          let textToken = token;\n          let body = this.renderer.text(textToken);\n          while (i + 1 < tokens.length && tokens[i + 1].type === \"text\") {\n            textToken = tokens[++i];\n            body += \"\\n\" + this.renderer.text(textToken);\n          }\n          if (top) {\n            out += this.renderer.paragraph({\n              type: \"paragraph\",\n              raw: body,\n              text: body,\n              tokens: [{ type: \"text\", raw: body, text: body, escaped: true }]\n            });\n          } else {\n            out += body;\n          }\n          continue;\n        }\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return \"\";\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n    return out;\n  }\n  /**\n   * Parse Inline Tokens\n   */\n  parseInline(tokens, renderer = this.renderer) {\n    let out = \"\";\n    for (let i = 0; i < tokens.length; i++) {\n      const anyToken = tokens[i];\n      if (this.options.extensions?.renderers?.[anyToken.type]) {\n        const ret = this.options.extensions.renderers[anyToken.type].call({ parser: this }, anyToken);\n        if (ret !== false || ![\"escape\", \"html\", \"link\", \"image\", \"strong\", \"em\", \"codespan\", \"br\", \"del\", \"text\"].includes(anyToken.type)) {\n          out += ret || \"\";\n          continue;\n        }\n      }\n      const token = anyToken;\n      switch (token.type) {\n        case \"escape\": {\n          out += renderer.text(token);\n          break;\n        }\n        case \"html\": {\n          out += renderer.html(token);\n          break;\n        }\n        case \"link\": {\n          out += renderer.link(token);\n          break;\n        }\n        case \"image\": {\n          out += renderer.image(token);\n          break;\n        }\n        case \"strong\": {\n          out += renderer.strong(token);\n          break;\n        }\n        case \"em\": {\n          out += renderer.em(token);\n          break;\n        }\n        case \"codespan\": {\n          out += renderer.codespan(token);\n          break;\n        }\n        case \"br\": {\n          out += renderer.br(token);\n          break;\n        }\n        case \"del\": {\n          out += renderer.del(token);\n          break;\n        }\n        case \"text\": {\n          out += renderer.text(token);\n          break;\n        }\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return \"\";\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n    return out;\n  }\n};\n\n// src/Hooks.ts\nvar _Hooks = class {\n  options;\n  block;\n  constructor(options2) {\n    this.options = options2 || _defaults;\n  }\n  static passThroughHooks = /* @__PURE__ */ new Set([\n    \"preprocess\",\n    \"postprocess\",\n    \"processAllTokens\"\n  ]);\n  /**\n   * Process markdown before marked\n   */\n  preprocess(markdown) {\n    return markdown;\n  }\n  /**\n   * Process HTML after marked is finished\n   */\n  postprocess(html2) {\n    return html2;\n  }\n  /**\n   * Process all tokens before walk tokens\n   */\n  processAllTokens(tokens) {\n    return tokens;\n  }\n  /**\n   * Provide function to tokenize markdown\n   */\n  provideLexer() {\n    return this.block ? _Lexer.lex : _Lexer.lexInline;\n  }\n  /**\n   * Provide function to parse tokens\n   */\n  provideParser() {\n    return this.block ? _Parser.parse : _Parser.parseInline;\n  }\n};\n\n// src/Instance.ts\nvar Marked = class {\n  defaults = _getDefaults();\n  options = this.setOptions;\n  parse = this.parseMarkdown(true);\n  parseInline = this.parseMarkdown(false);\n  Parser = _Parser;\n  Renderer = _Renderer;\n  TextRenderer = _TextRenderer;\n  Lexer = _Lexer;\n  Tokenizer = _Tokenizer;\n  Hooks = _Hooks;\n  constructor(...args) {\n    this.use(...args);\n  }\n  /**\n   * Run callback for every token\n   */\n  walkTokens(tokens, callback) {\n    let values = [];\n    for (const token of tokens) {\n      values = values.concat(callback.call(this, token));\n      switch (token.type) {\n        case \"table\": {\n          const tableToken = token;\n          for (const cell of tableToken.header) {\n            values = values.concat(this.walkTokens(cell.tokens, callback));\n          }\n          for (const row of tableToken.rows) {\n            for (const cell of row) {\n              values = values.concat(this.walkTokens(cell.tokens, callback));\n            }\n          }\n          break;\n        }\n        case \"list\": {\n          const listToken = token;\n          values = values.concat(this.walkTokens(listToken.items, callback));\n          break;\n        }\n        default: {\n          const genericToken = token;\n          if (this.defaults.extensions?.childTokens?.[genericToken.type]) {\n            this.defaults.extensions.childTokens[genericToken.type].forEach((childTokens) => {\n              const tokens2 = genericToken[childTokens].flat(Infinity);\n              values = values.concat(this.walkTokens(tokens2, callback));\n            });\n          } else if (genericToken.tokens) {\n            values = values.concat(this.walkTokens(genericToken.tokens, callback));\n          }\n        }\n      }\n    }\n    return values;\n  }\n  use(...args) {\n    const extensions = this.defaults.extensions || { renderers: {}, childTokens: {} };\n    args.forEach((pack) => {\n      const opts = { ...pack };\n      opts.async = this.defaults.async || opts.async || false;\n      if (pack.extensions) {\n        pack.extensions.forEach((ext) => {\n          if (!ext.name) {\n            throw new Error(\"extension name required\");\n          }\n          if (\"renderer\" in ext) {\n            const prevRenderer = extensions.renderers[ext.name];\n            if (prevRenderer) {\n              extensions.renderers[ext.name] = function(...args2) {\n                let ret = ext.renderer.apply(this, args2);\n                if (ret === false) {\n                  ret = prevRenderer.apply(this, args2);\n                }\n                return ret;\n              };\n            } else {\n              extensions.renderers[ext.name] = ext.renderer;\n            }\n          }\n          if (\"tokenizer\" in ext) {\n            if (!ext.level || ext.level !== \"block\" && ext.level !== \"inline\") {\n              throw new Error(\"extension level must be 'block' or 'inline'\");\n            }\n            const extLevel = extensions[ext.level];\n            if (extLevel) {\n              extLevel.unshift(ext.tokenizer);\n            } else {\n              extensions[ext.level] = [ext.tokenizer];\n            }\n            if (ext.start) {\n              if (ext.level === \"block\") {\n                if (extensions.startBlock) {\n                  extensions.startBlock.push(ext.start);\n                } else {\n                  extensions.startBlock = [ext.start];\n                }\n              } else if (ext.level === \"inline\") {\n                if (extensions.startInline) {\n                  extensions.startInline.push(ext.start);\n                } else {\n                  extensions.startInline = [ext.start];\n                }\n              }\n            }\n          }\n          if (\"childTokens\" in ext && ext.childTokens) {\n            extensions.childTokens[ext.name] = ext.childTokens;\n          }\n        });\n        opts.extensions = extensions;\n      }\n      if (pack.renderer) {\n        const renderer = this.defaults.renderer || new _Renderer(this.defaults);\n        for (const prop in pack.renderer) {\n          if (!(prop in renderer)) {\n            throw new Error(`renderer '${prop}' does not exist`);\n          }\n          if ([\"options\", \"parser\"].includes(prop)) {\n            continue;\n          }\n          const rendererProp = prop;\n          const rendererFunc = pack.renderer[rendererProp];\n          const prevRenderer = renderer[rendererProp];\n          renderer[rendererProp] = (...args2) => {\n            let ret = rendererFunc.apply(renderer, args2);\n            if (ret === false) {\n              ret = prevRenderer.apply(renderer, args2);\n            }\n            return ret || \"\";\n          };\n        }\n        opts.renderer = renderer;\n      }\n      if (pack.tokenizer) {\n        const tokenizer = this.defaults.tokenizer || new _Tokenizer(this.defaults);\n        for (const prop in pack.tokenizer) {\n          if (!(prop in tokenizer)) {\n            throw new Error(`tokenizer '${prop}' does not exist`);\n          }\n          if ([\"options\", \"rules\", \"lexer\"].includes(prop)) {\n            continue;\n          }\n          const tokenizerProp = prop;\n          const tokenizerFunc = pack.tokenizer[tokenizerProp];\n          const prevTokenizer = tokenizer[tokenizerProp];\n          tokenizer[tokenizerProp] = (...args2) => {\n            let ret = tokenizerFunc.apply(tokenizer, args2);\n            if (ret === false) {\n              ret = prevTokenizer.apply(tokenizer, args2);\n            }\n            return ret;\n          };\n        }\n        opts.tokenizer = tokenizer;\n      }\n      if (pack.hooks) {\n        const hooks = this.defaults.hooks || new _Hooks();\n        for (const prop in pack.hooks) {\n          if (!(prop in hooks)) {\n            throw new Error(`hook '${prop}' does not exist`);\n          }\n          if ([\"options\", \"block\"].includes(prop)) {\n            continue;\n          }\n          const hooksProp = prop;\n          const hooksFunc = pack.hooks[hooksProp];\n          const prevHook = hooks[hooksProp];\n          if (_Hooks.passThroughHooks.has(prop)) {\n            hooks[hooksProp] = (arg) => {\n              if (this.defaults.async) {\n                return Promise.resolve(hooksFunc.call(hooks, arg)).then((ret2) => {\n                  return prevHook.call(hooks, ret2);\n                });\n              }\n              const ret = hooksFunc.call(hooks, arg);\n              return prevHook.call(hooks, ret);\n            };\n          } else {\n            hooks[hooksProp] = (...args2) => {\n              let ret = hooksFunc.apply(hooks, args2);\n              if (ret === false) {\n                ret = prevHook.apply(hooks, args2);\n              }\n              return ret;\n            };\n          }\n        }\n        opts.hooks = hooks;\n      }\n      if (pack.walkTokens) {\n        const walkTokens2 = this.defaults.walkTokens;\n        const packWalktokens = pack.walkTokens;\n        opts.walkTokens = function(token) {\n          let values = [];\n          values.push(packWalktokens.call(this, token));\n          if (walkTokens2) {\n            values = values.concat(walkTokens2.call(this, token));\n          }\n          return values;\n        };\n      }\n      this.defaults = { ...this.defaults, ...opts };\n    });\n    return this;\n  }\n  setOptions(opt) {\n    this.defaults = { ...this.defaults, ...opt };\n    return this;\n  }\n  lexer(src, options2) {\n    return _Lexer.lex(src, options2 ?? this.defaults);\n  }\n  parser(tokens, options2) {\n    return _Parser.parse(tokens, options2 ?? this.defaults);\n  }\n  parseMarkdown(blockType) {\n    const parse2 = (src, options2) => {\n      const origOpt = { ...options2 };\n      const opt = { ...this.defaults, ...origOpt };\n      const throwError = this.onError(!!opt.silent, !!opt.async);\n      if (this.defaults.async === true && origOpt.async === false) {\n        return throwError(new Error(\"marked(): The async option was set to true by an extension. Remove async: false from the parse options object to return a Promise.\"));\n      }\n      if (typeof src === \"undefined\" || src === null) {\n        return throwError(new Error(\"marked(): input parameter is undefined or null\"));\n      }\n      if (typeof src !== \"string\") {\n        return throwError(new Error(\"marked(): input parameter is of type \" + Object.prototype.toString.call(src) + \", string expected\"));\n      }\n      if (opt.hooks) {\n        opt.hooks.options = opt;\n        opt.hooks.block = blockType;\n      }\n      const lexer2 = opt.hooks ? opt.hooks.provideLexer() : blockType ? _Lexer.lex : _Lexer.lexInline;\n      const parser2 = opt.hooks ? opt.hooks.provideParser() : blockType ? _Parser.parse : _Parser.parseInline;\n      if (opt.async) {\n        return Promise.resolve(opt.hooks ? opt.hooks.preprocess(src) : src).then((src2) => lexer2(src2, opt)).then((tokens) => opt.hooks ? opt.hooks.processAllTokens(tokens) : tokens).then((tokens) => opt.walkTokens ? Promise.all(this.walkTokens(tokens, opt.walkTokens)).then(() => tokens) : tokens).then((tokens) => parser2(tokens, opt)).then((html2) => opt.hooks ? opt.hooks.postprocess(html2) : html2).catch(throwError);\n      }\n      try {\n        if (opt.hooks) {\n          src = opt.hooks.preprocess(src);\n        }\n        let tokens = lexer2(src, opt);\n        if (opt.hooks) {\n          tokens = opt.hooks.processAllTokens(tokens);\n        }\n        if (opt.walkTokens) {\n          this.walkTokens(tokens, opt.walkTokens);\n        }\n        let html2 = parser2(tokens, opt);\n        if (opt.hooks) {\n          html2 = opt.hooks.postprocess(html2);\n        }\n        return html2;\n      } catch (e) {\n        return throwError(e);\n      }\n    };\n    return parse2;\n  }\n  onError(silent, async) {\n    return (e) => {\n      e.message += \"\\nPlease report this to https://github.com/markedjs/marked.\";\n      if (silent) {\n        const msg = \"<p>An error occurred:</p><pre>\" + escape2(e.message + \"\", true) + \"</pre>\";\n        if (async) {\n          return Promise.resolve(msg);\n        }\n        return msg;\n      }\n      if (async) {\n        return Promise.reject(e);\n      }\n      throw e;\n    };\n  }\n};\n\n// src/marked.ts\nvar markedInstance = new Marked();\nfunction marked(src, opt) {\n  return markedInstance.parse(src, opt);\n}\nmarked.options = marked.setOptions = function(options2) {\n  markedInstance.setOptions(options2);\n  marked.defaults = markedInstance.defaults;\n  changeDefaults(marked.defaults);\n  return marked;\n};\nmarked.getDefaults = _getDefaults;\nmarked.defaults = _defaults;\nmarked.use = function(...args) {\n  markedInstance.use(...args);\n  marked.defaults = markedInstance.defaults;\n  changeDefaults(marked.defaults);\n  return marked;\n};\nmarked.walkTokens = function(tokens, callback) {\n  return markedInstance.walkTokens(tokens, callback);\n};\nmarked.parseInline = markedInstance.parseInline;\nmarked.Parser = _Parser;\nmarked.parser = _Parser.parse;\nmarked.Renderer = _Renderer;\nmarked.TextRenderer = _TextRenderer;\nmarked.Lexer = _Lexer;\nmarked.lexer = _Lexer.lex;\nmarked.Tokenizer = _Tokenizer;\nmarked.Hooks = _Hooks;\nmarked.parse = marked;\nvar options = marked.options;\nvar setOptions = marked.setOptions;\nvar use = marked.use;\nvar walkTokens = marked.walkTokens;\nvar parseInline = marked.parseInline;\nvar parse = marked;\nvar parser = _Parser.parse;\nvar lexer = _Lexer.lex;\nexport {\n  _Hooks as Hooks,\n  _Lexer as Lexer,\n  Marked,\n  _Parser as Parser,\n  _Renderer as Renderer,\n  _TextRenderer as TextRenderer,\n  _Tokenizer as Tokenizer,\n  _defaults as defaults,\n  _getDefaults as getDefaults,\n  lexer,\n  marked,\n  options,\n  parse,\n  parseInline,\n  parser,\n  setOptions,\n  use,\n  walkTokens\n};\n//# sourceMappingURL=marked.esm.js.map\n","/*! @license DOMPurify 3.2.6 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/3.2.6/LICENSE */\n\nconst {\n  entries,\n  setPrototypeOf,\n  isFrozen,\n  getPrototypeOf,\n  getOwnPropertyDescriptor\n} = Object;\nlet {\n  freeze,\n  seal,\n  create\n} = Object; // eslint-disable-line import/no-mutable-exports\nlet {\n  apply,\n  construct\n} = typeof Reflect !== 'undefined' && Reflect;\nif (!freeze) {\n  freeze = function freeze(x) {\n    return x;\n  };\n}\nif (!seal) {\n  seal = function seal(x) {\n    return x;\n  };\n}\nif (!apply) {\n  apply = function apply(fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\nif (!construct) {\n  construct = function construct(Func, args) {\n    return new Func(...args);\n  };\n}\nconst arrayForEach = unapply(Array.prototype.forEach);\nconst arrayLastIndexOf = unapply(Array.prototype.lastIndexOf);\nconst arrayPop = unapply(Array.prototype.pop);\nconst arrayPush = unapply(Array.prototype.push);\nconst arraySplice = unapply(Array.prototype.splice);\nconst stringToLowerCase = unapply(String.prototype.toLowerCase);\nconst stringToString = unapply(String.prototype.toString);\nconst stringMatch = unapply(String.prototype.match);\nconst stringReplace = unapply(String.prototype.replace);\nconst stringIndexOf = unapply(String.prototype.indexOf);\nconst stringTrim = unapply(String.prototype.trim);\nconst objectHasOwnProperty = unapply(Object.prototype.hasOwnProperty);\nconst regExpTest = unapply(RegExp.prototype.test);\nconst typeErrorCreate = unconstruct(TypeError);\n/**\n * Creates a new function that calls the given function with a specified thisArg and arguments.\n *\n * @param func - The function to be wrapped and called.\n * @returns A new function that calls the given function with a specified thisArg and arguments.\n */\nfunction unapply(func) {\n  return function (thisArg) {\n    if (thisArg instanceof RegExp) {\n      thisArg.lastIndex = 0;\n    }\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    return apply(func, thisArg, args);\n  };\n}\n/**\n * Creates a new function that constructs an instance of the given constructor function with the provided arguments.\n *\n * @param func - The constructor function to be wrapped and called.\n * @returns A new function that constructs an instance of the given constructor function with the provided arguments.\n */\nfunction unconstruct(func) {\n  return function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    return construct(func, args);\n  };\n}\n/**\n * Add properties to a lookup table\n *\n * @param set - The set to which elements will be added.\n * @param array - The array containing elements to be added to the set.\n * @param transformCaseFunc - An optional function to transform the case of each element before adding to the set.\n * @returns The modified set with added elements.\n */\nfunction addToSet(set, array) {\n  let transformCaseFunc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : stringToLowerCase;\n  if (setPrototypeOf) {\n    // Make 'in' and truthy checks like Boolean(set.constructor)\n    // independent of any properties defined on Object.prototype.\n    // Prevent prototype setters from intercepting set as a this value.\n    setPrototypeOf(set, null);\n  }\n  let l = array.length;\n  while (l--) {\n    let element = array[l];\n    if (typeof element === 'string') {\n      const lcElement = transformCaseFunc(element);\n      if (lcElement !== element) {\n        // Config presets (e.g. tags.js, attrs.js) are immutable.\n        if (!isFrozen(array)) {\n          array[l] = lcElement;\n        }\n        element = lcElement;\n      }\n    }\n    set[element] = true;\n  }\n  return set;\n}\n/**\n * Clean up an array to harden against CSPP\n *\n * @param array - The array to be cleaned.\n * @returns The cleaned version of the array\n */\nfunction cleanArray(array) {\n  for (let index = 0; index < array.length; index++) {\n    const isPropertyExist = objectHasOwnProperty(array, index);\n    if (!isPropertyExist) {\n      array[index] = null;\n    }\n  }\n  return array;\n}\n/**\n * Shallow clone an object\n *\n * @param object - The object to be cloned.\n * @returns A new object that copies the original.\n */\nfunction clone(object) {\n  const newObject = create(null);\n  for (const [property, value] of entries(object)) {\n    const isPropertyExist = objectHasOwnProperty(object, property);\n    if (isPropertyExist) {\n      if (Array.isArray(value)) {\n        newObject[property] = cleanArray(value);\n      } else if (value && typeof value === 'object' && value.constructor === Object) {\n        newObject[property] = clone(value);\n      } else {\n        newObject[property] = value;\n      }\n    }\n  }\n  return newObject;\n}\n/**\n * This method automatically checks if the prop is function or getter and behaves accordingly.\n *\n * @param object - The object to look up the getter function in its prototype chain.\n * @param prop - The property name for which to find the getter function.\n * @returns The getter function found in the prototype chain or a fallback function.\n */\nfunction lookupGetter(object, prop) {\n  while (object !== null) {\n    const desc = getOwnPropertyDescriptor(object, prop);\n    if (desc) {\n      if (desc.get) {\n        return unapply(desc.get);\n      }\n      if (typeof desc.value === 'function') {\n        return unapply(desc.value);\n      }\n    }\n    object = getPrototypeOf(object);\n  }\n  function fallbackValue() {\n    return null;\n  }\n  return fallbackValue;\n}\n\nconst html$1 = freeze(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dialog', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']);\nconst svg$1 = freeze(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'view', 'vkern']);\nconst svgFilters = freeze(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feDropShadow', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feImage', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']);\n// List of SVG elements that are disallowed by default.\n// We still need to know them so that we can do namespace\n// checks properly in case one wants to add them to\n// allow-list.\nconst svgDisallowed = freeze(['animate', 'color-profile', 'cursor', 'discard', 'font-face', 'font-face-format', 'font-face-name', 'font-face-src', 'font-face-uri', 'foreignobject', 'hatch', 'hatchpath', 'mesh', 'meshgradient', 'meshpatch', 'meshrow', 'missing-glyph', 'script', 'set', 'solidcolor', 'unknown', 'use']);\nconst mathMl$1 = freeze(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover', 'mprescripts']);\n// Similarly to SVG, we want to know all MathML elements,\n// even those that we disallow by default.\nconst mathMlDisallowed = freeze(['maction', 'maligngroup', 'malignmark', 'mlongdiv', 'mscarries', 'mscarry', 'msgroup', 'mstack', 'msline', 'msrow', 'semantics', 'annotation', 'annotation-xml', 'mprescripts', 'none']);\nconst text = freeze(['#text']);\n\nconst html = freeze(['accept', 'action', 'align', 'alt', 'autocapitalize', 'autocomplete', 'autopictureinpicture', 'autoplay', 'background', 'bgcolor', 'border', 'capture', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'controls', 'controlslist', 'coords', 'crossorigin', 'datetime', 'decoding', 'default', 'dir', 'disabled', 'disablepictureinpicture', 'disableremoteplayback', 'download', 'draggable', 'enctype', 'enterkeyhint', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'inputmode', 'integrity', 'ismap', 'kind', 'label', 'lang', 'list', 'loading', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'minlength', 'multiple', 'muted', 'name', 'nonce', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'playsinline', 'popover', 'popovertarget', 'popovertargetaction', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'translate', 'type', 'usemap', 'valign', 'value', 'width', 'wrap', 'xmlns', 'slot']);\nconst svg = freeze(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'amplitude', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clippathunits', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'exponent', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'filterunits', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'intercept', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'primitiveunits', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'slope', 'specularconstant', 'specularexponent', 'spreadmethod', 'startoffset', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'systemlanguage', 'tabindex', 'tablevalues', 'targetx', 'targety', 'transform', 'transform-origin', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'version', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);\nconst mathMl = freeze(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'encoding', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);\nconst xml = freeze(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']);\n\n// eslint-disable-next-line unicorn/better-regex\nconst MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\nconst ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\nconst TMPLIT_EXPR = seal(/\\$\\{[\\w\\W]*/gm); // eslint-disable-line unicorn/better-regex\nconst DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]+$/); // eslint-disable-line no-useless-escape\nconst ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\nconst IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp|matrix):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n);\nconst IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\nconst ATTR_WHITESPACE = seal(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n);\nconst DOCTYPE_NAME = seal(/^html$/i);\nconst CUSTOM_ELEMENT = seal(/^[a-z][.\\w]*(-[.\\w]+)+$/i);\n\nvar EXPRESSIONS = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ARIA_ATTR: ARIA_ATTR,\n  ATTR_WHITESPACE: ATTR_WHITESPACE,\n  CUSTOM_ELEMENT: CUSTOM_ELEMENT,\n  DATA_ATTR: DATA_ATTR,\n  DOCTYPE_NAME: DOCTYPE_NAME,\n  ERB_EXPR: ERB_EXPR,\n  IS_ALLOWED_URI: IS_ALLOWED_URI,\n  IS_SCRIPT_OR_DATA: IS_SCRIPT_OR_DATA,\n  MUSTACHE_EXPR: MUSTACHE_EXPR,\n  TMPLIT_EXPR: TMPLIT_EXPR\n});\n\n/* eslint-disable @typescript-eslint/indent */\n// https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\nconst NODE_TYPE = {\n  element: 1,\n  attribute: 2,\n  text: 3,\n  cdataSection: 4,\n  entityReference: 5,\n  // Deprecated\n  entityNode: 6,\n  // Deprecated\n  progressingInstruction: 7,\n  comment: 8,\n  document: 9,\n  documentType: 10,\n  documentFragment: 11,\n  notation: 12 // Deprecated\n};\nconst getGlobal = function getGlobal() {\n  return typeof window === 'undefined' ? null : window;\n};\n/**\n * Creates a no-op policy for internal use only.\n * Don't export this function outside this module!\n * @param trustedTypes The policy factory.\n * @param purifyHostElement The Script element used to load DOMPurify (to determine policy name suffix).\n * @return The policy created (or null, if Trusted Types\n * are not supported or creating the policy failed).\n */\nconst _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, purifyHostElement) {\n  if (typeof trustedTypes !== 'object' || typeof trustedTypes.createPolicy !== 'function') {\n    return null;\n  }\n  // Allow the callers to control the unique policy name\n  // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n  // Policy creation with duplicate names throws in Trusted Types.\n  let suffix = null;\n  const ATTR_NAME = 'data-tt-policy-suffix';\n  if (purifyHostElement && purifyHostElement.hasAttribute(ATTR_NAME)) {\n    suffix = purifyHostElement.getAttribute(ATTR_NAME);\n  }\n  const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n  try {\n    return trustedTypes.createPolicy(policyName, {\n      createHTML(html) {\n        return html;\n      },\n      createScriptURL(scriptUrl) {\n        return scriptUrl;\n      }\n    });\n  } catch (_) {\n    // Policy creation failed (most likely another DOMPurify script has\n    // already run). Skip creating the policy, as this will only cause errors\n    // if TT are enforced.\n    console.warn('TrustedTypes policy ' + policyName + ' could not be created.');\n    return null;\n  }\n};\nconst _createHooksMap = function _createHooksMap() {\n  return {\n    afterSanitizeAttributes: [],\n    afterSanitizeElements: [],\n    afterSanitizeShadowDOM: [],\n    beforeSanitizeAttributes: [],\n    beforeSanitizeElements: [],\n    beforeSanitizeShadowDOM: [],\n    uponSanitizeAttribute: [],\n    uponSanitizeElement: [],\n    uponSanitizeShadowNode: []\n  };\n};\nfunction createDOMPurify() {\n  let window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();\n  const DOMPurify = root => createDOMPurify(root);\n  DOMPurify.version = '3.2.6';\n  DOMPurify.removed = [];\n  if (!window || !window.document || window.document.nodeType !== NODE_TYPE.document || !window.Element) {\n    // Not running in a browser, provide a factory function\n    // so that you can pass your own Window\n    DOMPurify.isSupported = false;\n    return DOMPurify;\n  }\n  let {\n    document\n  } = window;\n  const originalDocument = document;\n  const currentScript = originalDocument.currentScript;\n  const {\n    DocumentFragment,\n    HTMLTemplateElement,\n    Node,\n    Element,\n    NodeFilter,\n    NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,\n    HTMLFormElement,\n    DOMParser,\n    trustedTypes\n  } = window;\n  const ElementPrototype = Element.prototype;\n  const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n  const remove = lookupGetter(ElementPrototype, 'remove');\n  const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n  const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n  const getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n  // As per issue #47, the web-components registry is inherited by a\n  // new document created via createHTMLDocument. As per the spec\n  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n  // a new empty registry is used when creating a template contents owner\n  // document, so we use that as our parent document to ensure nothing\n  // is inherited.\n  if (typeof HTMLTemplateElement === 'function') {\n    const template = document.createElement('template');\n    if (template.content && template.content.ownerDocument) {\n      document = template.content.ownerDocument;\n    }\n  }\n  let trustedTypesPolicy;\n  let emptyHTML = '';\n  const {\n    implementation,\n    createNodeIterator,\n    createDocumentFragment,\n    getElementsByTagName\n  } = document;\n  const {\n    importNode\n  } = originalDocument;\n  let hooks = _createHooksMap();\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n  DOMPurify.isSupported = typeof entries === 'function' && typeof getParentNode === 'function' && implementation && implementation.createHTMLDocument !== undefined;\n  const {\n    MUSTACHE_EXPR,\n    ERB_EXPR,\n    TMPLIT_EXPR,\n    DATA_ATTR,\n    ARIA_ATTR,\n    IS_SCRIPT_OR_DATA,\n    ATTR_WHITESPACE,\n    CUSTOM_ELEMENT\n  } = EXPRESSIONS;\n  let {\n    IS_ALLOWED_URI: IS_ALLOWED_URI$1\n  } = EXPRESSIONS;\n  /**\n   * We consider the elements and attributes below to be safe. Ideally\n   * don't add any new ones but feel free to remove unwanted ones.\n   */\n  /* allowed element names */\n  let ALLOWED_TAGS = null;\n  const DEFAULT_ALLOWED_TAGS = addToSet({}, [...html$1, ...svg$1, ...svgFilters, ...mathMl$1, ...text]);\n  /* Allowed attribute names */\n  let ALLOWED_ATTR = null;\n  const DEFAULT_ALLOWED_ATTR = addToSet({}, [...html, ...svg, ...mathMl, ...xml]);\n  /*\n   * Configure how DOMPurify should handle custom elements and their attributes as well as customized built-in elements.\n   * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n   * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n   * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n   */\n  let CUSTOM_ELEMENT_HANDLING = Object.seal(create(null, {\n    tagNameCheck: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: null\n    },\n    attributeNameCheck: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: null\n    },\n    allowCustomizedBuiltInElements: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: false\n    }\n  }));\n  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n  let FORBID_TAGS = null;\n  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n  let FORBID_ATTR = null;\n  /* Decide if ARIA attributes are okay */\n  let ALLOW_ARIA_ATTR = true;\n  /* Decide if custom data attributes are okay */\n  let ALLOW_DATA_ATTR = true;\n  /* Decide if unknown protocols are okay */\n  let ALLOW_UNKNOWN_PROTOCOLS = false;\n  /* Decide if self-closing tags in attributes are allowed.\n   * Usually removed due to a mXSS issue in jQuery 3.0 */\n  let ALLOW_SELF_CLOSE_IN_ATTR = true;\n  /* Output should be safe for common template engines.\n   * This means, DOMPurify removes data attributes, mustaches and ERB\n   */\n  let SAFE_FOR_TEMPLATES = false;\n  /* Output should be safe even for XML used within HTML and alike.\n   * This means, DOMPurify removes comments when containing risky content.\n   */\n  let SAFE_FOR_XML = true;\n  /* Decide if document with <html>... should be returned */\n  let WHOLE_DOCUMENT = false;\n  /* Track whether config is already set on this instance of DOMPurify. */\n  let SET_CONFIG = false;\n  /* Decide if all elements (e.g. style, script) must be children of\n   * document.body. By default, browsers might move them to document.head */\n  let FORCE_BODY = false;\n  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n   * string (or a TrustedHTML object if Trusted Types are supported).\n   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n   */\n  let RETURN_DOM = false;\n  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n   * string  (or a TrustedHTML object if Trusted Types are supported) */\n  let RETURN_DOM_FRAGMENT = false;\n  /* Try to return a Trusted Type object instead of a string, return a string in\n   * case Trusted Types are not supported  */\n  let RETURN_TRUSTED_TYPE = false;\n  /* Output should be free from DOM clobbering attacks?\n   * This sanitizes markups named with colliding, clobberable built-in DOM APIs.\n   */\n  let SANITIZE_DOM = true;\n  /* Achieve full DOM Clobbering protection by isolating the namespace of named\n   * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.\n   *\n   * HTML/DOM spec rules that enable DOM Clobbering:\n   *   - Named Access on Window (§7.3.3)\n   *   - DOM Tree Accessors (§3.1.5)\n   *   - Form Element Parent-Child Relations (§4.10.3)\n   *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)\n   *   - HTMLCollection (§4.2.10.2)\n   *\n   * Namespace isolation is implemented by prefixing `id` and `name` attributes\n   * with a constant string, i.e., `user-content-`\n   */\n  let SANITIZE_NAMED_PROPS = false;\n  const SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';\n  /* Keep element content when removing element? */\n  let KEEP_CONTENT = true;\n  /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n   * of importing it into a new Document and returning a sanitized copy */\n  let IN_PLACE = false;\n  /* Allow usage of profiles like html, svg and mathMl */\n  let USE_PROFILES = {};\n  /* Tags to ignore content of when KEEP_CONTENT is true */\n  let FORBID_CONTENTS = null;\n  const DEFAULT_FORBID_CONTENTS = addToSet({}, ['annotation-xml', 'audio', 'colgroup', 'desc', 'foreignobject', 'head', 'iframe', 'math', 'mi', 'mn', 'mo', 'ms', 'mtext', 'noembed', 'noframes', 'noscript', 'plaintext', 'script', 'style', 'svg', 'template', 'thead', 'title', 'video', 'xmp']);\n  /* Tags that are safe for data: URIs */\n  let DATA_URI_TAGS = null;\n  const DEFAULT_DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image', 'track']);\n  /* Attributes safe for values like \"javascript:\" */\n  let URI_SAFE_ATTRIBUTES = null;\n  const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'role', 'summary', 'title', 'value', 'style', 'xmlns']);\n  const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n  const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n  const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n  /* Document namespace */\n  let NAMESPACE = HTML_NAMESPACE;\n  let IS_EMPTY_INPUT = false;\n  /* Allowed XHTML+XML namespaces */\n  let ALLOWED_NAMESPACES = null;\n  const DEFAULT_ALLOWED_NAMESPACES = addToSet({}, [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE], stringToString);\n  let MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, ['mi', 'mo', 'mn', 'ms', 'mtext']);\n  let HTML_INTEGRATION_POINTS = addToSet({}, ['annotation-xml']);\n  // Certain elements are allowed in both SVG and HTML\n  // namespace. We need to specify them explicitly\n  // so that they don't get erroneously deleted from\n  // HTML namespace.\n  const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, ['title', 'style', 'font', 'a', 'script']);\n  /* Parsing of strict XHTML documents */\n  let PARSER_MEDIA_TYPE = null;\n  const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n  const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n  let transformCaseFunc = null;\n  /* Keep a reference to config to pass to hooks */\n  let CONFIG = null;\n  /* Ideally, do not touch anything below this line */\n  /* ______________________________________________ */\n  const formElement = document.createElement('form');\n  const isRegexOrFunction = function isRegexOrFunction(testValue) {\n    return testValue instanceof RegExp || testValue instanceof Function;\n  };\n  /**\n   * _parseConfig\n   *\n   * @param cfg optional config literal\n   */\n  // eslint-disable-next-line complexity\n  const _parseConfig = function _parseConfig() {\n    let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (CONFIG && CONFIG === cfg) {\n      return;\n    }\n    /* Shield configuration object from tampering */\n    if (!cfg || typeof cfg !== 'object') {\n      cfg = {};\n    }\n    /* Shield configuration object from prototype pollution */\n    cfg = clone(cfg);\n    PARSER_MEDIA_TYPE =\n    // eslint-disable-next-line unicorn/prefer-includes\n    SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1 ? DEFAULT_PARSER_MEDIA_TYPE : cfg.PARSER_MEDIA_TYPE;\n    // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n    transformCaseFunc = PARSER_MEDIA_TYPE === 'application/xhtml+xml' ? stringToString : stringToLowerCase;\n    /* Set configuration parameters */\n    ALLOWED_TAGS = objectHasOwnProperty(cfg, 'ALLOWED_TAGS') ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc) : DEFAULT_ALLOWED_TAGS;\n    ALLOWED_ATTR = objectHasOwnProperty(cfg, 'ALLOWED_ATTR') ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc) : DEFAULT_ALLOWED_ATTR;\n    ALLOWED_NAMESPACES = objectHasOwnProperty(cfg, 'ALLOWED_NAMESPACES') ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString) : DEFAULT_ALLOWED_NAMESPACES;\n    URI_SAFE_ATTRIBUTES = objectHasOwnProperty(cfg, 'ADD_URI_SAFE_ATTR') ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES), cfg.ADD_URI_SAFE_ATTR, transformCaseFunc) : DEFAULT_URI_SAFE_ATTRIBUTES;\n    DATA_URI_TAGS = objectHasOwnProperty(cfg, 'ADD_DATA_URI_TAGS') ? addToSet(clone(DEFAULT_DATA_URI_TAGS), cfg.ADD_DATA_URI_TAGS, transformCaseFunc) : DEFAULT_DATA_URI_TAGS;\n    FORBID_CONTENTS = objectHasOwnProperty(cfg, 'FORBID_CONTENTS') ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc) : DEFAULT_FORBID_CONTENTS;\n    FORBID_TAGS = objectHasOwnProperty(cfg, 'FORBID_TAGS') ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc) : clone({});\n    FORBID_ATTR = objectHasOwnProperty(cfg, 'FORBID_ATTR') ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc) : clone({});\n    USE_PROFILES = objectHasOwnProperty(cfg, 'USE_PROFILES') ? cfg.USE_PROFILES : false;\n    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n    ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false; // Default true\n    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n    SAFE_FOR_XML = cfg.SAFE_FOR_XML !== false; // Default true\n    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n    RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n    RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n    FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n    SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false\n    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n    IN_PLACE = cfg.IN_PLACE || false; // Default false\n    IS_ALLOWED_URI$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI;\n    NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n    MATHML_TEXT_INTEGRATION_POINTS = cfg.MATHML_TEXT_INTEGRATION_POINTS || MATHML_TEXT_INTEGRATION_POINTS;\n    HTML_INTEGRATION_POINTS = cfg.HTML_INTEGRATION_POINTS || HTML_INTEGRATION_POINTS;\n    CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};\n    if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)) {\n      CUSTOM_ELEMENT_HANDLING.tagNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n    }\n    if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)) {\n      CUSTOM_ELEMENT_HANDLING.attributeNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n    }\n    if (cfg.CUSTOM_ELEMENT_HANDLING && typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements === 'boolean') {\n      CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements = cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n    }\n    if (SAFE_FOR_TEMPLATES) {\n      ALLOW_DATA_ATTR = false;\n    }\n    if (RETURN_DOM_FRAGMENT) {\n      RETURN_DOM = true;\n    }\n    /* Parse profile info */\n    if (USE_PROFILES) {\n      ALLOWED_TAGS = addToSet({}, text);\n      ALLOWED_ATTR = [];\n      if (USE_PROFILES.html === true) {\n        addToSet(ALLOWED_TAGS, html$1);\n        addToSet(ALLOWED_ATTR, html);\n      }\n      if (USE_PROFILES.svg === true) {\n        addToSet(ALLOWED_TAGS, svg$1);\n        addToSet(ALLOWED_ATTR, svg);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n      if (USE_PROFILES.svgFilters === true) {\n        addToSet(ALLOWED_TAGS, svgFilters);\n        addToSet(ALLOWED_ATTR, svg);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n      if (USE_PROFILES.mathMl === true) {\n        addToSet(ALLOWED_TAGS, mathMl$1);\n        addToSet(ALLOWED_ATTR, mathMl);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n    }\n    /* Merge configuration parameters */\n    if (cfg.ADD_TAGS) {\n      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n        ALLOWED_TAGS = clone(ALLOWED_TAGS);\n      }\n      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\n    }\n    if (cfg.ADD_ATTR) {\n      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n        ALLOWED_ATTR = clone(ALLOWED_ATTR);\n      }\n      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\n    }\n    if (cfg.ADD_URI_SAFE_ATTR) {\n      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\n    }\n    if (cfg.FORBID_CONTENTS) {\n      if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n        FORBID_CONTENTS = clone(FORBID_CONTENTS);\n      }\n      addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\n    }\n    /* Add #text in case KEEP_CONTENT is set to true */\n    if (KEEP_CONTENT) {\n      ALLOWED_TAGS['#text'] = true;\n    }\n    /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n    if (WHOLE_DOCUMENT) {\n      addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n    }\n    /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n    if (ALLOWED_TAGS.table) {\n      addToSet(ALLOWED_TAGS, ['tbody']);\n      delete FORBID_TAGS.tbody;\n    }\n    if (cfg.TRUSTED_TYPES_POLICY) {\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createHTML !== 'function') {\n        throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createHTML\" hook.');\n      }\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createScriptURL !== 'function') {\n        throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createScriptURL\" hook.');\n      }\n      // Overwrite existing TrustedTypes policy.\n      trustedTypesPolicy = cfg.TRUSTED_TYPES_POLICY;\n      // Sign local variables required by `sanitize`.\n      emptyHTML = trustedTypesPolicy.createHTML('');\n    } else {\n      // Uninitialized policy, attempt to initialize the internal dompurify policy.\n      if (trustedTypesPolicy === undefined) {\n        trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, currentScript);\n      }\n      // If creating the internal policy succeeded sign internal variables.\n      if (trustedTypesPolicy !== null && typeof emptyHTML === 'string') {\n        emptyHTML = trustedTypesPolicy.createHTML('');\n      }\n    }\n    // Prevent further manipulation of configuration.\n    // Not available in IE8, Safari 5, etc.\n    if (freeze) {\n      freeze(cfg);\n    }\n    CONFIG = cfg;\n  };\n  /* Keep track of all possible SVG and MathML tags\n   * so that we can perform the namespace checks\n   * correctly. */\n  const ALL_SVG_TAGS = addToSet({}, [...svg$1, ...svgFilters, ...svgDisallowed]);\n  const ALL_MATHML_TAGS = addToSet({}, [...mathMl$1, ...mathMlDisallowed]);\n  /**\n   * @param element a DOM element whose namespace is being checked\n   * @returns Return false if the element has a\n   *  namespace that a spec-compliant parser would never\n   *  return. Return true otherwise.\n   */\n  const _checkValidNamespace = function _checkValidNamespace(element) {\n    let parent = getParentNode(element);\n    // In JSDOM, if we're inside shadow DOM, then parentNode\n    // can be null. We just simulate parent in this case.\n    if (!parent || !parent.tagName) {\n      parent = {\n        namespaceURI: NAMESPACE,\n        tagName: 'template'\n      };\n    }\n    const tagName = stringToLowerCase(element.tagName);\n    const parentTagName = stringToLowerCase(parent.tagName);\n    if (!ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return false;\n    }\n    if (element.namespaceURI === SVG_NAMESPACE) {\n      // The only way to switch from HTML namespace to SVG\n      // is via <svg>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'svg';\n      }\n      // The only way to switch from MathML to SVG is via`\n      // svg if parent is either <annotation-xml> or MathML\n      // text integration points.\n      if (parent.namespaceURI === MATHML_NAMESPACE) {\n        return tagName === 'svg' && (parentTagName === 'annotation-xml' || MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);\n      }\n      // We only allow elements that are defined in SVG\n      // spec. All others are disallowed in SVG namespace.\n      return Boolean(ALL_SVG_TAGS[tagName]);\n    }\n    if (element.namespaceURI === MATHML_NAMESPACE) {\n      // The only way to switch from HTML namespace to MathML\n      // is via <math>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'math';\n      }\n      // The only way to switch from SVG to MathML is via\n      // <math> and HTML integration points\n      if (parent.namespaceURI === SVG_NAMESPACE) {\n        return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n      }\n      // We only allow elements that are defined in MathML\n      // spec. All others are disallowed in MathML namespace.\n      return Boolean(ALL_MATHML_TAGS[tagName]);\n    }\n    if (element.namespaceURI === HTML_NAMESPACE) {\n      // The only way to switch from SVG to HTML is via\n      // HTML integration points, and from MathML to HTML\n      // is via MathML text integration points\n      if (parent.namespaceURI === SVG_NAMESPACE && !HTML_INTEGRATION_POINTS[parentTagName]) {\n        return false;\n      }\n      if (parent.namespaceURI === MATHML_NAMESPACE && !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]) {\n        return false;\n      }\n      // We disallow tags that are specific for MathML\n      // or SVG and should never appear in HTML namespace\n      return !ALL_MATHML_TAGS[tagName] && (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName]);\n    }\n    // For XHTML and XML documents that support custom namespaces\n    if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return true;\n    }\n    // The code should never reach this place (this means\n    // that the element somehow got namespace that is not\n    // HTML, SVG, MathML or allowed via ALLOWED_NAMESPACES).\n    // Return false just in case.\n    return false;\n  };\n  /**\n   * _forceRemove\n   *\n   * @param node a DOM node\n   */\n  const _forceRemove = function _forceRemove(node) {\n    arrayPush(DOMPurify.removed, {\n      element: node\n    });\n    try {\n      // eslint-disable-next-line unicorn/prefer-dom-node-remove\n      getParentNode(node).removeChild(node);\n    } catch (_) {\n      remove(node);\n    }\n  };\n  /**\n   * _removeAttribute\n   *\n   * @param name an Attribute name\n   * @param element a DOM node\n   */\n  const _removeAttribute = function _removeAttribute(name, element) {\n    try {\n      arrayPush(DOMPurify.removed, {\n        attribute: element.getAttributeNode(name),\n        from: element\n      });\n    } catch (_) {\n      arrayPush(DOMPurify.removed, {\n        attribute: null,\n        from: element\n      });\n    }\n    element.removeAttribute(name);\n    // We void attribute values for unremovable \"is\" attributes\n    if (name === 'is') {\n      if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n        try {\n          _forceRemove(element);\n        } catch (_) {}\n      } else {\n        try {\n          element.setAttribute(name, '');\n        } catch (_) {}\n      }\n    }\n  };\n  /**\n   * _initDocument\n   *\n   * @param dirty - a string of dirty markup\n   * @return a DOM, filled with the dirty markup\n   */\n  const _initDocument = function _initDocument(dirty) {\n    /* Create a HTML document */\n    let doc = null;\n    let leadingWhitespace = null;\n    if (FORCE_BODY) {\n      dirty = '<remove></remove>' + dirty;\n    } else {\n      /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n      const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n      leadingWhitespace = matches && matches[0];\n    }\n    if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && NAMESPACE === HTML_NAMESPACE) {\n      // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n      dirty = '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' + dirty + '</body></html>';\n    }\n    const dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n    /*\n     * Use the DOMParser API by default, fallback later if needs be\n     * DOMParser not work for svg when has multiple root element.\n     */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      try {\n        doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n      } catch (_) {}\n    }\n    /* Use createHTMLDocument in case DOMParser is not available */\n    if (!doc || !doc.documentElement) {\n      doc = implementation.createDocument(NAMESPACE, 'template', null);\n      try {\n        doc.documentElement.innerHTML = IS_EMPTY_INPUT ? emptyHTML : dirtyPayload;\n      } catch (_) {\n        // Syntax error if dirtyPayload is invalid xml\n      }\n    }\n    const body = doc.body || doc.documentElement;\n    if (dirty && leadingWhitespace) {\n      body.insertBefore(document.createTextNode(leadingWhitespace), body.childNodes[0] || null);\n    }\n    /* Work on whole document or just its body */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];\n    }\n    return WHOLE_DOCUMENT ? doc.documentElement : body;\n  };\n  /**\n   * Creates a NodeIterator object that you can use to traverse filtered lists of nodes or elements in a document.\n   *\n   * @param root The root element or node to start traversing on.\n   * @return The created NodeIterator\n   */\n  const _createNodeIterator = function _createNodeIterator(root) {\n    return createNodeIterator.call(root.ownerDocument || root, root,\n    // eslint-disable-next-line no-bitwise\n    NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT | NodeFilter.SHOW_PROCESSING_INSTRUCTION | NodeFilter.SHOW_CDATA_SECTION, null);\n  };\n  /**\n   * _isClobbered\n   *\n   * @param element element to check for clobbering attacks\n   * @return true if clobbered, false if safe\n   */\n  const _isClobbered = function _isClobbered(element) {\n    return element instanceof HTMLFormElement && (typeof element.nodeName !== 'string' || typeof element.textContent !== 'string' || typeof element.removeChild !== 'function' || !(element.attributes instanceof NamedNodeMap) || typeof element.removeAttribute !== 'function' || typeof element.setAttribute !== 'function' || typeof element.namespaceURI !== 'string' || typeof element.insertBefore !== 'function' || typeof element.hasChildNodes !== 'function');\n  };\n  /**\n   * Checks whether the given object is a DOM node.\n   *\n   * @param value object to check whether it's a DOM node\n   * @return true is object is a DOM node\n   */\n  const _isNode = function _isNode(value) {\n    return typeof Node === 'function' && value instanceof Node;\n  };\n  function _executeHooks(hooks, currentNode, data) {\n    arrayForEach(hooks, hook => {\n      hook.call(DOMPurify, currentNode, data, CONFIG);\n    });\n  }\n  /**\n   * _sanitizeElements\n   *\n   * @protect nodeName\n   * @protect textContent\n   * @protect removeChild\n   * @param currentNode to check for permission to exist\n   * @return true if node was killed, false if left alive\n   */\n  const _sanitizeElements = function _sanitizeElements(currentNode) {\n    let content = null;\n    /* Execute a hook if present */\n    _executeHooks(hooks.beforeSanitizeElements, currentNode, null);\n    /* Check if element is clobbered or can clobber */\n    if (_isClobbered(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Now let's check the element's type and name */\n    const tagName = transformCaseFunc(currentNode.nodeName);\n    /* Execute a hook if present */\n    _executeHooks(hooks.uponSanitizeElement, currentNode, {\n      tagName,\n      allowedTags: ALLOWED_TAGS\n    });\n    /* Detect mXSS attempts abusing namespace confusion */\n    if (SAFE_FOR_XML && currentNode.hasChildNodes() && !_isNode(currentNode.firstElementChild) && regExpTest(/<[/\\w!]/g, currentNode.innerHTML) && regExpTest(/<[/\\w!]/g, currentNode.textContent)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Remove any occurrence of processing instructions */\n    if (currentNode.nodeType === NODE_TYPE.progressingInstruction) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Remove any kind of possibly harmful comments */\n    if (SAFE_FOR_XML && currentNode.nodeType === NODE_TYPE.comment && regExpTest(/<[/\\w]/g, currentNode.data)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Remove element if anything forbids its presence */\n    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n      /* Check if we have a custom element to handle */\n      if (!FORBID_TAGS[tagName] && _isBasicCustomElement(tagName)) {\n        if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)) {\n          return false;\n        }\n        if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)) {\n          return false;\n        }\n      }\n      /* Keep content except for bad-listed elements */\n      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n        const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n        const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n        if (childNodes && parentNode) {\n          const childCount = childNodes.length;\n          for (let i = childCount - 1; i >= 0; --i) {\n            const childClone = cloneNode(childNodes[i], true);\n            childClone.__removalCount = (currentNode.__removalCount || 0) + 1;\n            parentNode.insertBefore(childClone, getNextSibling(currentNode));\n          }\n        }\n      }\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Check whether element has a valid namespace */\n    if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Make sure that older browsers don't get fallback-tag mXSS */\n    if ((tagName === 'noscript' || tagName === 'noembed' || tagName === 'noframes') && regExpTest(/<\\/no(script|embed|frames)/i, currentNode.innerHTML)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Sanitize element content to be template-safe */\n    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === NODE_TYPE.text) {\n      /* Get the element's text content */\n      content = currentNode.textContent;\n      arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n        content = stringReplace(content, expr, ' ');\n      });\n      if (currentNode.textContent !== content) {\n        arrayPush(DOMPurify.removed, {\n          element: currentNode.cloneNode()\n        });\n        currentNode.textContent = content;\n      }\n    }\n    /* Execute a hook if present */\n    _executeHooks(hooks.afterSanitizeElements, currentNode, null);\n    return false;\n  };\n  /**\n   * _isValidAttribute\n   *\n   * @param lcTag Lowercase tag name of containing element.\n   * @param lcName Lowercase attribute name.\n   * @param value Attribute value.\n   * @return Returns true if `value` is valid, otherwise false.\n   */\n  // eslint-disable-next-line complexity\n  const _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {\n    /* Make sure attribute cannot clobber */\n    if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {\n      return false;\n    }\n    /* Allow valid data-* attributes: At least one character after \"-\"\n        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n        We don't need to check the value; it's always URI safe. */\n    if (ALLOW_DATA_ATTR && !FORBID_ATTR[lcName] && regExpTest(DATA_ATTR, lcName)) ; else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) ; else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n      if (\n      // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n      // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n      // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n      _isBasicCustomElement(lcTag) && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag)) && (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName) || CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)) ||\n      // Alternative, second condition checks if it's an `is`-attribute, AND\n      // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n      lcName === 'is' && CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))) ; else {\n        return false;\n      }\n      /* Check value is safe. First, is attr inert? If so, is safe */\n    } else if (URI_SAFE_ATTRIBUTES[lcName]) ; else if (regExpTest(IS_ALLOWED_URI$1, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if ((lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') && lcTag !== 'script' && stringIndexOf(value, 'data:') === 0 && DATA_URI_TAGS[lcTag]) ; else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if (value) {\n      return false;\n    } else ;\n    return true;\n  };\n  /**\n   * _isBasicCustomElement\n   * checks if at least one dash is included in tagName, and it's not the first char\n   * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n   *\n   * @param tagName name of the tag of the node to sanitize\n   * @returns Returns true if the tag name meets the basic criteria for a custom element, otherwise false.\n   */\n  const _isBasicCustomElement = function _isBasicCustomElement(tagName) {\n    return tagName !== 'annotation-xml' && stringMatch(tagName, CUSTOM_ELEMENT);\n  };\n  /**\n   * _sanitizeAttributes\n   *\n   * @protect attributes\n   * @protect nodeName\n   * @protect removeAttribute\n   * @protect setAttribute\n   *\n   * @param currentNode to sanitize\n   */\n  const _sanitizeAttributes = function _sanitizeAttributes(currentNode) {\n    /* Execute a hook if present */\n    _executeHooks(hooks.beforeSanitizeAttributes, currentNode, null);\n    const {\n      attributes\n    } = currentNode;\n    /* Check if we have attributes; if not we might have a text node */\n    if (!attributes || _isClobbered(currentNode)) {\n      return;\n    }\n    const hookEvent = {\n      attrName: '',\n      attrValue: '',\n      keepAttr: true,\n      allowedAttributes: ALLOWED_ATTR,\n      forceKeepAttr: undefined\n    };\n    let l = attributes.length;\n    /* Go backwards over all attributes; safely remove bad ones */\n    while (l--) {\n      const attr = attributes[l];\n      const {\n        name,\n        namespaceURI,\n        value: attrValue\n      } = attr;\n      const lcName = transformCaseFunc(name);\n      const initValue = attrValue;\n      let value = name === 'value' ? initValue : stringTrim(initValue);\n      /* Execute a hook if present */\n      hookEvent.attrName = lcName;\n      hookEvent.attrValue = value;\n      hookEvent.keepAttr = true;\n      hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n      _executeHooks(hooks.uponSanitizeAttribute, currentNode, hookEvent);\n      value = hookEvent.attrValue;\n      /* Full DOM Clobbering protection via namespace isolation,\n       * Prefix id and name attributes with `user-content-`\n       */\n      if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {\n        // Remove the attribute with this value\n        _removeAttribute(name, currentNode);\n        // Prefix the value and later re-create the attribute with the sanitized value\n        value = SANITIZE_NAMED_PROPS_PREFIX + value;\n      }\n      /* Work around a security issue with comments inside attributes */\n      if (SAFE_FOR_XML && regExpTest(/((--!?|])>)|<\\/(style|title)/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n      /* Did the hooks approve of the attribute? */\n      if (hookEvent.forceKeepAttr) {\n        continue;\n      }\n      /* Did the hooks approve of the attribute? */\n      if (!hookEvent.keepAttr) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n      /* Work around a security issue in jQuery 3.0 */\n      if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\\/>/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n      /* Sanitize attribute content to be template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n          value = stringReplace(value, expr, ' ');\n        });\n      }\n      /* Is `value` valid for this attribute? */\n      const lcTag = transformCaseFunc(currentNode.nodeName);\n      if (!_isValidAttribute(lcTag, lcName, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n      /* Handle attributes that require Trusted Types */\n      if (trustedTypesPolicy && typeof trustedTypes === 'object' && typeof trustedTypes.getAttributeType === 'function') {\n        if (namespaceURI) ; else {\n          switch (trustedTypes.getAttributeType(lcTag, lcName)) {\n            case 'TrustedHTML':\n              {\n                value = trustedTypesPolicy.createHTML(value);\n                break;\n              }\n            case 'TrustedScriptURL':\n              {\n                value = trustedTypesPolicy.createScriptURL(value);\n                break;\n              }\n          }\n        }\n      }\n      /* Handle invalid data-* attribute set by try-catching it */\n      if (value !== initValue) {\n        try {\n          if (namespaceURI) {\n            currentNode.setAttributeNS(namespaceURI, name, value);\n          } else {\n            /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n            currentNode.setAttribute(name, value);\n          }\n          if (_isClobbered(currentNode)) {\n            _forceRemove(currentNode);\n          } else {\n            arrayPop(DOMPurify.removed);\n          }\n        } catch (_) {\n          _removeAttribute(name, currentNode);\n        }\n      }\n    }\n    /* Execute a hook if present */\n    _executeHooks(hooks.afterSanitizeAttributes, currentNode, null);\n  };\n  /**\n   * _sanitizeShadowDOM\n   *\n   * @param fragment to iterate over recursively\n   */\n  const _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {\n    let shadowNode = null;\n    const shadowIterator = _createNodeIterator(fragment);\n    /* Execute a hook if present */\n    _executeHooks(hooks.beforeSanitizeShadowDOM, fragment, null);\n    while (shadowNode = shadowIterator.nextNode()) {\n      /* Execute a hook if present */\n      _executeHooks(hooks.uponSanitizeShadowNode, shadowNode, null);\n      /* Sanitize tags and elements */\n      _sanitizeElements(shadowNode);\n      /* Check attributes next */\n      _sanitizeAttributes(shadowNode);\n      /* Deep shadow DOM detected */\n      if (shadowNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(shadowNode.content);\n      }\n    }\n    /* Execute a hook if present */\n    _executeHooks(hooks.afterSanitizeShadowDOM, fragment, null);\n  };\n  // eslint-disable-next-line complexity\n  DOMPurify.sanitize = function (dirty) {\n    let cfg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let body = null;\n    let importedNode = null;\n    let currentNode = null;\n    let returnNode = null;\n    /* Make sure we have a string to sanitize.\n      DO NOT return early, as this will return the wrong type if\n      the user has requested a DOM object rather than a string */\n    IS_EMPTY_INPUT = !dirty;\n    if (IS_EMPTY_INPUT) {\n      dirty = '<!-->';\n    }\n    /* Stringify, in case dirty is an object */\n    if (typeof dirty !== 'string' && !_isNode(dirty)) {\n      if (typeof dirty.toString === 'function') {\n        dirty = dirty.toString();\n        if (typeof dirty !== 'string') {\n          throw typeErrorCreate('dirty is not a string, aborting');\n        }\n      } else {\n        throw typeErrorCreate('toString is not a function');\n      }\n    }\n    /* Return dirty HTML if DOMPurify cannot run */\n    if (!DOMPurify.isSupported) {\n      return dirty;\n    }\n    /* Assign config vars */\n    if (!SET_CONFIG) {\n      _parseConfig(cfg);\n    }\n    /* Clean up removed elements */\n    DOMPurify.removed = [];\n    /* Check if dirty is correctly typed for IN_PLACE */\n    if (typeof dirty === 'string') {\n      IN_PLACE = false;\n    }\n    if (IN_PLACE) {\n      /* Do some early pre-sanitization to avoid unsafe root nodes */\n      if (dirty.nodeName) {\n        const tagName = transformCaseFunc(dirty.nodeName);\n        if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n          throw typeErrorCreate('root node is forbidden and cannot be sanitized in-place');\n        }\n      }\n    } else if (dirty instanceof Node) {\n      /* If dirty is a DOM element, append to an empty document to avoid\n         elements being stripped by the parser */\n      body = _initDocument('<!---->');\n      importedNode = body.ownerDocument.importNode(dirty, true);\n      if (importedNode.nodeType === NODE_TYPE.element && importedNode.nodeName === 'BODY') {\n        /* Node is already a body, use as is */\n        body = importedNode;\n      } else if (importedNode.nodeName === 'HTML') {\n        body = importedNode;\n      } else {\n        // eslint-disable-next-line unicorn/prefer-dom-node-append\n        body.appendChild(importedNode);\n      }\n    } else {\n      /* Exit directly if we have nothing to do */\n      if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT &&\n      // eslint-disable-next-line unicorn/prefer-includes\n      dirty.indexOf('<') === -1) {\n        return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;\n      }\n      /* Initialize the document to work on */\n      body = _initDocument(dirty);\n      /* Check we have a DOM node from the data */\n      if (!body) {\n        return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n      }\n    }\n    /* Remove first element node (ours) if FORCE_BODY is set */\n    if (body && FORCE_BODY) {\n      _forceRemove(body.firstChild);\n    }\n    /* Get node iterator */\n    const nodeIterator = _createNodeIterator(IN_PLACE ? dirty : body);\n    /* Now start iterating over the created document */\n    while (currentNode = nodeIterator.nextNode()) {\n      /* Sanitize tags and elements */\n      _sanitizeElements(currentNode);\n      /* Check attributes next */\n      _sanitizeAttributes(currentNode);\n      /* Shadow DOM detected, sanitize it */\n      if (currentNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(currentNode.content);\n      }\n    }\n    /* If we sanitized `dirty` in-place, return it. */\n    if (IN_PLACE) {\n      return dirty;\n    }\n    /* Return sanitized string or DOM */\n    if (RETURN_DOM) {\n      if (RETURN_DOM_FRAGMENT) {\n        returnNode = createDocumentFragment.call(body.ownerDocument);\n        while (body.firstChild) {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          returnNode.appendChild(body.firstChild);\n        }\n      } else {\n        returnNode = body;\n      }\n      if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmode) {\n        /*\n          AdoptNode() is not used because internal state is not reset\n          (e.g. the past names map of a HTMLFormElement), this is safe\n          in theory but we would rather not risk another attack vector.\n          The state that is cloned by importNode() is explicitly defined\n          by the specs.\n        */\n        returnNode = importNode.call(originalDocument, returnNode, true);\n      }\n      return returnNode;\n    }\n    let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n    /* Serialize doctype if allowed */\n    if (WHOLE_DOCUMENT && ALLOWED_TAGS['!doctype'] && body.ownerDocument && body.ownerDocument.doctype && body.ownerDocument.doctype.name && regExpTest(DOCTYPE_NAME, body.ownerDocument.doctype.name)) {\n      serializedHTML = '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n    }\n    /* Sanitize final string template-safe */\n    if (SAFE_FOR_TEMPLATES) {\n      arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n        serializedHTML = stringReplace(serializedHTML, expr, ' ');\n      });\n    }\n    return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;\n  };\n  DOMPurify.setConfig = function () {\n    let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _parseConfig(cfg);\n    SET_CONFIG = true;\n  };\n  DOMPurify.clearConfig = function () {\n    CONFIG = null;\n    SET_CONFIG = false;\n  };\n  DOMPurify.isValidAttribute = function (tag, attr, value) {\n    /* Initialize shared config vars if necessary. */\n    if (!CONFIG) {\n      _parseConfig({});\n    }\n    const lcTag = transformCaseFunc(tag);\n    const lcName = transformCaseFunc(attr);\n    return _isValidAttribute(lcTag, lcName, value);\n  };\n  DOMPurify.addHook = function (entryPoint, hookFunction) {\n    if (typeof hookFunction !== 'function') {\n      return;\n    }\n    arrayPush(hooks[entryPoint], hookFunction);\n  };\n  DOMPurify.removeHook = function (entryPoint, hookFunction) {\n    if (hookFunction !== undefined) {\n      const index = arrayLastIndexOf(hooks[entryPoint], hookFunction);\n      return index === -1 ? undefined : arraySplice(hooks[entryPoint], index, 1)[0];\n    }\n    return arrayPop(hooks[entryPoint]);\n  };\n  DOMPurify.removeHooks = function (entryPoint) {\n    hooks[entryPoint] = [];\n  };\n  DOMPurify.removeAllHooks = function () {\n    hooks = _createHooksMap();\n  };\n  return DOMPurify;\n}\nvar purify = createDOMPurify();\n\nexport { purify as default };\n//# sourceMappingURL=purify.es.mjs.map\n","<script setup lang=\"ts\">\nimport { watch, ref, computed } from 'vue'\nimport { marked } from 'marked';\nimport DOMPurify from 'dompurify';\n\nexport interface Props {\n    md: string | null\n    silent?: boolean\n    breaks?: boolean\n    gfm?: boolean\n    pedantic?: boolean\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n    md: null,\n    silent: false,\n    breaks: false,\n    gfm: true,\n    pedantic: false\n})\n\nconst renderedMarkdown = ref('');\n\nconst computedMarkdown = computed(() => props.md)\n\nconst computedMarkedOptions = computed(() => {\n    return {\n        ...(typeof props.silent === 'boolean' ? { silent: props.silent } : { silent: false }),\n        ...(typeof props.breaks === 'boolean' ? { breaks: props.breaks } : { breaks: false }),\n        ...(typeof props.gfm === 'boolean' ? { gfm: props.gfm } : { gfm: true }),\n        ...(typeof props.pedantic === 'boolean' ? { pedantic: props.pedantic } : { pedantic: false }),\n    }\n})\n\nconst sanitize = (html: string) => DOMPurify.sanitize(html);\n\nwatch(computedMarkdown, async (newValue) => {\n    if (newValue) renderedMarkdown.value = sanitize(await marked.parse(newValue, { async: true, ...computedMarkedOptions.value }))\n})\n</script>\n\n<template>\n    <div v-if=\"renderedMarkdown\" v-html=\"renderedMarkdown\"></div>\n</template>"],"names":["_getDefaults","_defaults","changeDefaults","newDefaults","noopTest","edit","regex","opt","source","obj","name","val","valSource","other","bull","indent","newline","blockCode","fences","hr","heading","bullet","lheadingCore","lheading","lheadingGfm","_paragraph","blockText","_blockLabel","def","list","_tag","_comment","html","paragraph","blockquote","blockNormal","gfmTable","blockGfm","blockPedantic","escape","inlineCode","br","inlineText","_punctuation","_punctuationOrSpace","_notPunctuationOrSpace","punctuation","_punctuationGfmStrongEm","_punctuationOrSpaceGfmStrongEm","_notPunctuationOrSpaceGfmStrongEm","blockSkip","emStrongLDelimCore","emStrongLDelim","emStrongLDelimGfm","emStrongRDelimAstCore","emStrongRDelimAst","emStrongRDelimAstGfm","emStrongRDelimUnd","anyPunctuation","autolink","_inlineComment","tag","_inlineLabel","link","reflink","nolink","reflinkSearch","inlineNormal","inlinePedantic","inlineGfm","inlineBreaks","block","inline","escapeReplacements","getEscapeReplacement","ch","escape2","html2","encode","cleanUrl","href","splitCells","tableRow","count","row","match","offset","str","escaped","curr","cells","i","_a","rtrim","c","invert","l","suffLen","findClosingBracket","b","level","outputLink","cap","link2","raw","lexer2","rules","title","text","token","indentCodeCompensation","matchIndentToCode","indentToCode","node","matchIndentInNode","indentInNode","_Tokenizer","options2","__publicField","src","trimmed","lines","tokens","inBlockquote","currentLines","currentRaw","currentText","top","lastToken","oldToken","newText","newToken","isordered","list2","itemRegex","endsWithBlankLine","endEarly","itemContents","line","t","nextLine","blankLine","nextBulletRegex","hrRegex","fencesBeginRegex","headingBeginRegex","htmlBeginRegex","rawLine","nextLineWithoutTabs","istask","ischecked","lastItem","spacers","hasMultipleLineBreaks","tag2","headers","aligns","rows","item","align","cell","trimmedUrl","rtrimSlash","lastParenIndex","linkLen","links","linkString","maskedSrc","prevChar","lLength","rDelim","rLength","delimTotal","midDelimTotal","endReg","lastCharLength","text2","hasNonSpaceChars","hasSpaceCharsOnBothEnds","prevCapZero","_Lexer","__Lexer","next","lastParagraphClipped","_b","extTokenizer","cutSrc","_c","startIndex","tempSrc","tempStart","getStartIndex","errMsg","keepPrevChar","_Renderer","lang","langString","code","depth","ordered","start","body","j","type","startAttr","itemBody","checkbox","checked","header","k","content","cleanHref","out","_TextRenderer","_Parser","__Parser","anyToken","genericToken","ret","textToken","renderer","_Hooks","markdown","Marked","args","callback","values","tableToken","listToken","childTokens","tokens2","extensions","pack","opts","ext","prevRenderer","args2","extLevel","prop","rendererProp","rendererFunc","tokenizer","tokenizerProp","tokenizerFunc","prevTokenizer","hooks","hooksProp","hooksFunc","prevHook","arg","ret2","walkTokens2","packWalktokens","blockType","origOpt","throwError","parser2","src2","e","silent","async","msg","markedInstance","marked","entries","setPrototypeOf","isFrozen","getPrototypeOf","getOwnPropertyDescriptor","freeze","seal","create","apply","construct","x","fun","thisValue","Func","arrayForEach","unapply","arrayLastIndexOf","arrayPop","arrayPush","arraySplice","stringToLowerCase","stringToString","stringMatch","stringReplace","stringIndexOf","stringTrim","objectHasOwnProperty","regExpTest","typeErrorCreate","unconstruct","func","thisArg","_len","_key","_len2","_key2","addToSet","set","array","transformCaseFunc","element","lcElement","cleanArray","index","clone","object","newObject","property","value","lookupGetter","desc","fallbackValue","html$1","svg$1","svgFilters","svgDisallowed","mathMl$1","mathMlDisallowed","svg","mathMl","xml","MUSTACHE_EXPR","ERB_EXPR","TMPLIT_EXPR","DATA_ATTR","ARIA_ATTR","IS_ALLOWED_URI","IS_SCRIPT_OR_DATA","ATTR_WHITESPACE","DOCTYPE_NAME","CUSTOM_ELEMENT","EXPRESSIONS","NODE_TYPE","getGlobal","_createTrustedTypesPolicy","trustedTypes","purifyHostElement","suffix","ATTR_NAME","policyName","scriptUrl","_createHooksMap","createDOMPurify","window","DOMPurify","root","document","originalDocument","currentScript","DocumentFragment","HTMLTemplateElement","Node","Element","NodeFilter","NamedNodeMap","HTMLFormElement","DOMParser","ElementPrototype","cloneNode","remove","getNextSibling","getChildNodes","getParentNode","template","trustedTypesPolicy","emptyHTML","implementation","createNodeIterator","createDocumentFragment","getElementsByTagName","importNode","IS_ALLOWED_URI$1","ALLOWED_TAGS","DEFAULT_ALLOWED_TAGS","ALLOWED_ATTR","DEFAULT_ALLOWED_ATTR","CUSTOM_ELEMENT_HANDLING","FORBID_TAGS","FORBID_ATTR","ALLOW_ARIA_ATTR","ALLOW_DATA_ATTR","ALLOW_UNKNOWN_PROTOCOLS","ALLOW_SELF_CLOSE_IN_ATTR","SAFE_FOR_TEMPLATES","SAFE_FOR_XML","WHOLE_DOCUMENT","SET_CONFIG","FORCE_BODY","RETURN_DOM","RETURN_DOM_FRAGMENT","RETURN_TRUSTED_TYPE","SANITIZE_DOM","SANITIZE_NAMED_PROPS","SANITIZE_NAMED_PROPS_PREFIX","KEEP_CONTENT","IN_PLACE","USE_PROFILES","FORBID_CONTENTS","DEFAULT_FORBID_CONTENTS","DATA_URI_TAGS","DEFAULT_DATA_URI_TAGS","URI_SAFE_ATTRIBUTES","DEFAULT_URI_SAFE_ATTRIBUTES","MATHML_NAMESPACE","SVG_NAMESPACE","HTML_NAMESPACE","NAMESPACE","IS_EMPTY_INPUT","ALLOWED_NAMESPACES","DEFAULT_ALLOWED_NAMESPACES","MATHML_TEXT_INTEGRATION_POINTS","HTML_INTEGRATION_POINTS","COMMON_SVG_AND_HTML_ELEMENTS","PARSER_MEDIA_TYPE","SUPPORTED_PARSER_MEDIA_TYPES","DEFAULT_PARSER_MEDIA_TYPE","CONFIG","formElement","isRegexOrFunction","testValue","_parseConfig","cfg","ALL_SVG_TAGS","ALL_MATHML_TAGS","_checkValidNamespace","parent","tagName","parentTagName","_forceRemove","_removeAttribute","_initDocument","dirty","doc","leadingWhitespace","matches","dirtyPayload","_createNodeIterator","_isClobbered","_isNode","_executeHooks","currentNode","data","hook","_sanitizeElements","_isBasicCustomElement","parentNode","childNodes","childCount","childClone","expr","_isValidAttribute","lcTag","lcName","_sanitizeAttributes","attributes","hookEvent","attr","namespaceURI","attrValue","initValue","_sanitizeShadowDOM","fragment","shadowNode","shadowIterator","importedNode","returnNode","nodeIterator","serializedHTML","entryPoint","hookFunction","purify","props","__props","renderedMarkdown","ref","computedMarkdown","computed","computedMarkedOptions","sanitize","watch","newValue","_createElementBlock"],"mappings":"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","x_google_ignoreList":[0,1]}